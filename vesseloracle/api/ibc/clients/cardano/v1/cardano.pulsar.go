// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package cardanov1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Height                 protoreflect.MessageDescriptor
	fd_Height_revision_number protoreflect.FieldDescriptor
	fd_Height_revision_height protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_Height = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("Height")
	fd_Height_revision_number = md_Height.Fields().ByName("revision_number")
	fd_Height_revision_height = md_Height.Fields().ByName("revision_height")
}

var _ protoreflect.Message = (*fastReflection_Height)(nil)

type fastReflection_Height Height

func (x *Height) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Height)(x)
}

func (x *Height) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Height_messageType fastReflection_Height_messageType
var _ protoreflect.MessageType = fastReflection_Height_messageType{}

type fastReflection_Height_messageType struct{}

func (x fastReflection_Height_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Height)(nil)
}
func (x fastReflection_Height_messageType) New() protoreflect.Message {
	return new(fastReflection_Height)
}
func (x fastReflection_Height_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Height
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Height) Descriptor() protoreflect.MessageDescriptor {
	return md_Height
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Height) Type() protoreflect.MessageType {
	return _fastReflection_Height_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Height) New() protoreflect.Message {
	return new(fastReflection_Height)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Height) Interface() protoreflect.ProtoMessage {
	return (*Height)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Height) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RevisionNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RevisionNumber)
		if !f(fd_Height_revision_number, value) {
			return
		}
	}
	if x.RevisionHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RevisionHeight)
		if !f(fd_Height_revision_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Height) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		return x.RevisionNumber != uint64(0)
	case "ibc.clients.cardano.v1.Height.revision_height":
		return x.RevisionHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		x.RevisionNumber = uint64(0)
	case "ibc.clients.cardano.v1.Height.revision_height":
		x.RevisionHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Height) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		value := x.RevisionNumber
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.Height.revision_height":
		value := x.RevisionHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		x.RevisionNumber = value.Uint()
	case "ibc.clients.cardano.v1.Height.revision_height":
		x.RevisionHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		panic(fmt.Errorf("field revision_number of message ibc.clients.cardano.v1.Height is not mutable"))
	case "ibc.clients.cardano.v1.Height.revision_height":
		panic(fmt.Errorf("field revision_height of message ibc.clients.cardano.v1.Height is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Height) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Height.revision_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.Height.revision_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Height does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Height) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.Height", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Height) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Height) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Height) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.RevisionNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.RevisionNumber))
		}
		if x.RevisionHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.RevisionHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RevisionHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RevisionHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.RevisionNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RevisionNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Height: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Height: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RevisionNumber", wireType)
				}
				x.RevisionNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RevisionNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RevisionHeight", wireType)
				}
				x.RevisionHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RevisionHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ConsensusState           protoreflect.MessageDescriptor
	fd_ConsensusState_timestamp protoreflect.FieldDescriptor
	fd_ConsensusState_slot      protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_ConsensusState = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("ConsensusState")
	fd_ConsensusState_timestamp = md_ConsensusState.Fields().ByName("timestamp")
	fd_ConsensusState_slot = md_ConsensusState.Fields().ByName("slot")
}

var _ protoreflect.Message = (*fastReflection_ConsensusState)(nil)

type fastReflection_ConsensusState ConsensusState

func (x *ConsensusState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ConsensusState)(x)
}

func (x *ConsensusState) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ConsensusState_messageType fastReflection_ConsensusState_messageType
var _ protoreflect.MessageType = fastReflection_ConsensusState_messageType{}

type fastReflection_ConsensusState_messageType struct{}

func (x fastReflection_ConsensusState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ConsensusState)(nil)
}
func (x fastReflection_ConsensusState_messageType) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}
func (x fastReflection_ConsensusState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ConsensusState) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ConsensusState) Type() protoreflect.MessageType {
	return _fastReflection_ConsensusState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ConsensusState) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ConsensusState) Interface() protoreflect.ProtoMessage {
	return (*ConsensusState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ConsensusState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_ConsensusState_timestamp, value) {
			return
		}
	}
	if x.Slot != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Slot)
		if !f(fd_ConsensusState_slot, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ConsensusState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		return x.Timestamp != uint64(0)
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		return x.Slot != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		x.Timestamp = uint64(0)
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		x.Slot = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ConsensusState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		value := x.Slot
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		x.Timestamp = value.Uint()
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		x.Slot = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		panic(fmt.Errorf("field timestamp of message ibc.clients.cardano.v1.ConsensusState is not mutable"))
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		panic(fmt.Errorf("field slot of message ibc.clients.cardano.v1.ConsensusState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ConsensusState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ConsensusState.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ConsensusState.slot":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ConsensusState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.ConsensusState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ConsensusState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ConsensusState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ConsensusState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		if x.Slot != 0 {
			n += 1 + runtime.Sov(uint64(x.Slot))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Slot != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Slot))
			i--
			dAtA[i] = 0x10
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
				}
				x.Slot = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Slot |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Validator              protoreflect.MessageDescriptor
	fd_Validator_vrf_key_hash protoreflect.FieldDescriptor
	fd_Validator_pool_id      protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_Validator = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("Validator")
	fd_Validator_vrf_key_hash = md_Validator.Fields().ByName("vrf_key_hash")
	fd_Validator_pool_id = md_Validator.Fields().ByName("pool_id")
}

var _ protoreflect.Message = (*fastReflection_Validator)(nil)

type fastReflection_Validator Validator

func (x *Validator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Validator)(x)
}

func (x *Validator) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Validator_messageType fastReflection_Validator_messageType
var _ protoreflect.MessageType = fastReflection_Validator_messageType{}

type fastReflection_Validator_messageType struct{}

func (x fastReflection_Validator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Validator)(nil)
}
func (x fastReflection_Validator_messageType) New() protoreflect.Message {
	return new(fastReflection_Validator)
}
func (x fastReflection_Validator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Validator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Validator) Descriptor() protoreflect.MessageDescriptor {
	return md_Validator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Validator) Type() protoreflect.MessageType {
	return _fastReflection_Validator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Validator) New() protoreflect.Message {
	return new(fastReflection_Validator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Validator) Interface() protoreflect.ProtoMessage {
	return (*Validator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Validator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.VrfKeyHash != "" {
		value := protoreflect.ValueOfString(x.VrfKeyHash)
		if !f(fd_Validator_vrf_key_hash, value) {
			return
		}
	}
	if x.PoolId != "" {
		value := protoreflect.ValueOfString(x.PoolId)
		if !f(fd_Validator_pool_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Validator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		return x.VrfKeyHash != ""
	case "ibc.clients.cardano.v1.Validator.pool_id":
		return x.PoolId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		x.VrfKeyHash = ""
	case "ibc.clients.cardano.v1.Validator.pool_id":
		x.PoolId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Validator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		value := x.VrfKeyHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.Validator.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		x.VrfKeyHash = value.Interface().(string)
	case "ibc.clients.cardano.v1.Validator.pool_id":
		x.PoolId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		panic(fmt.Errorf("field vrf_key_hash of message ibc.clients.cardano.v1.Validator is not mutable"))
	case "ibc.clients.cardano.v1.Validator.pool_id":
		panic(fmt.Errorf("field pool_id of message ibc.clients.cardano.v1.Validator is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Validator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Validator.vrf_key_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.Validator.pool_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Validator"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Validator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.Validator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Validator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Validator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Validator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.VrfKeyHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PoolId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PoolId) > 0 {
			i -= len(x.PoolId)
			copy(dAtA[i:], x.PoolId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PoolId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.VrfKeyHash) > 0 {
			i -= len(x.VrfKeyHash)
			copy(dAtA[i:], x.VrfKeyHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VrfKeyHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VrfKeyHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VrfKeyHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PoolId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BlockData             protoreflect.MessageDescriptor
	fd_BlockData_height      protoreflect.FieldDescriptor
	fd_BlockData_slot        protoreflect.FieldDescriptor
	fd_BlockData_hash        protoreflect.FieldDescriptor
	fd_BlockData_prev_hash   protoreflect.FieldDescriptor
	fd_BlockData_epoch_no    protoreflect.FieldDescriptor
	fd_BlockData_header_cbor protoreflect.FieldDescriptor
	fd_BlockData_body_cbor   protoreflect.FieldDescriptor
	fd_BlockData_epoch_nonce protoreflect.FieldDescriptor
	fd_BlockData_timestamp   protoreflect.FieldDescriptor
	fd_BlockData_chain_id    protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_BlockData = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("BlockData")
	fd_BlockData_height = md_BlockData.Fields().ByName("height")
	fd_BlockData_slot = md_BlockData.Fields().ByName("slot")
	fd_BlockData_hash = md_BlockData.Fields().ByName("hash")
	fd_BlockData_prev_hash = md_BlockData.Fields().ByName("prev_hash")
	fd_BlockData_epoch_no = md_BlockData.Fields().ByName("epoch_no")
	fd_BlockData_header_cbor = md_BlockData.Fields().ByName("header_cbor")
	fd_BlockData_body_cbor = md_BlockData.Fields().ByName("body_cbor")
	fd_BlockData_epoch_nonce = md_BlockData.Fields().ByName("epoch_nonce")
	fd_BlockData_timestamp = md_BlockData.Fields().ByName("timestamp")
	fd_BlockData_chain_id = md_BlockData.Fields().ByName("chain_id")
}

var _ protoreflect.Message = (*fastReflection_BlockData)(nil)

type fastReflection_BlockData BlockData

func (x *BlockData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BlockData)(x)
}

func (x *BlockData) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BlockData_messageType fastReflection_BlockData_messageType
var _ protoreflect.MessageType = fastReflection_BlockData_messageType{}

type fastReflection_BlockData_messageType struct{}

func (x fastReflection_BlockData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BlockData)(nil)
}
func (x fastReflection_BlockData_messageType) New() protoreflect.Message {
	return new(fastReflection_BlockData)
}
func (x fastReflection_BlockData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BlockData) Descriptor() protoreflect.MessageDescriptor {
	return md_BlockData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BlockData) Type() protoreflect.MessageType {
	return _fastReflection_BlockData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BlockData) New() protoreflect.Message {
	return new(fastReflection_BlockData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BlockData) Interface() protoreflect.ProtoMessage {
	return (*BlockData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BlockData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != nil {
		value := protoreflect.ValueOfMessage(x.Height.ProtoReflect())
		if !f(fd_BlockData_height, value) {
			return
		}
	}
	if x.Slot != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Slot)
		if !f(fd_BlockData_slot, value) {
			return
		}
	}
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_BlockData_hash, value) {
			return
		}
	}
	if x.PrevHash != "" {
		value := protoreflect.ValueOfString(x.PrevHash)
		if !f(fd_BlockData_prev_hash, value) {
			return
		}
	}
	if x.EpochNo != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNo)
		if !f(fd_BlockData_epoch_no, value) {
			return
		}
	}
	if x.HeaderCbor != "" {
		value := protoreflect.ValueOfString(x.HeaderCbor)
		if !f(fd_BlockData_header_cbor, value) {
			return
		}
	}
	if x.BodyCbor != "" {
		value := protoreflect.ValueOfString(x.BodyCbor)
		if !f(fd_BlockData_body_cbor, value) {
			return
		}
	}
	if x.EpochNonce != "" {
		value := protoreflect.ValueOfString(x.EpochNonce)
		if !f(fd_BlockData_epoch_nonce, value) {
			return
		}
	}
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_BlockData_timestamp, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_BlockData_chain_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BlockData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		return x.Height != nil
	case "ibc.clients.cardano.v1.BlockData.slot":
		return x.Slot != uint64(0)
	case "ibc.clients.cardano.v1.BlockData.hash":
		return x.Hash != ""
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		return x.PrevHash != ""
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		return x.EpochNo != uint64(0)
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		return x.HeaderCbor != ""
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		return x.BodyCbor != ""
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		return x.EpochNonce != ""
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		return x.Timestamp != uint64(0)
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		return x.ChainId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		x.Height = nil
	case "ibc.clients.cardano.v1.BlockData.slot":
		x.Slot = uint64(0)
	case "ibc.clients.cardano.v1.BlockData.hash":
		x.Hash = ""
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		x.PrevHash = ""
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		x.EpochNo = uint64(0)
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		x.HeaderCbor = ""
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		x.BodyCbor = ""
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		x.EpochNonce = ""
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		x.Timestamp = uint64(0)
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		x.ChainId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BlockData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		value := x.Height
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.cardano.v1.BlockData.slot":
		value := x.Slot
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.BlockData.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		value := x.PrevHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		value := x.EpochNo
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		value := x.HeaderCbor
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		value := x.BodyCbor
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		value := x.EpochNonce
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		x.Height = value.Message().Interface().(*Height)
	case "ibc.clients.cardano.v1.BlockData.slot":
		x.Slot = value.Uint()
	case "ibc.clients.cardano.v1.BlockData.hash":
		x.Hash = value.Interface().(string)
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		x.PrevHash = value.Interface().(string)
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		x.EpochNo = value.Uint()
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		x.HeaderCbor = value.Interface().(string)
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		x.BodyCbor = value.Interface().(string)
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		x.EpochNonce = value.Interface().(string)
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		x.Timestamp = value.Uint()
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		x.ChainId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		if x.Height == nil {
			x.Height = new(Height)
		}
		return protoreflect.ValueOfMessage(x.Height.ProtoReflect())
	case "ibc.clients.cardano.v1.BlockData.slot":
		panic(fmt.Errorf("field slot of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.hash":
		panic(fmt.Errorf("field hash of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		panic(fmt.Errorf("field prev_hash of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		panic(fmt.Errorf("field epoch_no of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		panic(fmt.Errorf("field header_cbor of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		panic(fmt.Errorf("field body_cbor of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		panic(fmt.Errorf("field epoch_nonce of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		panic(fmt.Errorf("field timestamp of message ibc.clients.cardano.v1.BlockData is not mutable"))
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		panic(fmt.Errorf("field chain_id of message ibc.clients.cardano.v1.BlockData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BlockData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.BlockData.height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.cardano.v1.BlockData.slot":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.BlockData.hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.BlockData.prev_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.BlockData.epoch_no":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.BlockData.header_cbor":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.BlockData.body_cbor":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.BlockData.epoch_nonce":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.BlockData.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.BlockData.chain_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.BlockData"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.BlockData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BlockData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.BlockData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BlockData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BlockData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BlockData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BlockData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BlockData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Height != nil {
			l = options.Size(x.Height)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Slot != 0 {
			n += 1 + runtime.Sov(uint64(x.Slot))
		}
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PrevHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochNo != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNo))
		}
		l = len(x.HeaderCbor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BodyCbor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EpochNonce)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BlockData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x52
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x48
		}
		if len(x.EpochNonce) > 0 {
			i -= len(x.EpochNonce)
			copy(dAtA[i:], x.EpochNonce)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EpochNonce)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.BodyCbor) > 0 {
			i -= len(x.BodyCbor)
			copy(dAtA[i:], x.BodyCbor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BodyCbor)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.HeaderCbor) > 0 {
			i -= len(x.HeaderCbor)
			copy(dAtA[i:], x.HeaderCbor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HeaderCbor)))
			i--
			dAtA[i] = 0x32
		}
		if x.EpochNo != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNo))
			i--
			dAtA[i] = 0x28
		}
		if len(x.PrevHash) > 0 {
			i -= len(x.PrevHash)
			copy(dAtA[i:], x.PrevHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PrevHash)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Slot != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Slot))
			i--
			dAtA[i] = 0x10
		}
		if x.Height != nil {
			encoded, err := options.Marshal(x.Height)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BlockData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BlockData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Height == nil {
					x.Height = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Height); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
				}
				x.Slot = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Slot |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrevHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PrevHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNo", wireType)
				}
				x.EpochNo = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNo |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HeaderCbor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HeaderCbor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BodyCbor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BodyCbor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNonce", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EpochNonce = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TokenConfigs                      protoreflect.MessageDescriptor
	fd_TokenConfigs_handler_token_unit   protoreflect.FieldDescriptor
	fd_TokenConfigs_client_policy_id     protoreflect.FieldDescriptor
	fd_TokenConfigs_connection_policy_id protoreflect.FieldDescriptor
	fd_TokenConfigs_channel_policy_id    protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_TokenConfigs = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("TokenConfigs")
	fd_TokenConfigs_handler_token_unit = md_TokenConfigs.Fields().ByName("handler_token_unit")
	fd_TokenConfigs_client_policy_id = md_TokenConfigs.Fields().ByName("client_policy_id")
	fd_TokenConfigs_connection_policy_id = md_TokenConfigs.Fields().ByName("connection_policy_id")
	fd_TokenConfigs_channel_policy_id = md_TokenConfigs.Fields().ByName("channel_policy_id")
}

var _ protoreflect.Message = (*fastReflection_TokenConfigs)(nil)

type fastReflection_TokenConfigs TokenConfigs

func (x *TokenConfigs) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TokenConfigs)(x)
}

func (x *TokenConfigs) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TokenConfigs_messageType fastReflection_TokenConfigs_messageType
var _ protoreflect.MessageType = fastReflection_TokenConfigs_messageType{}

type fastReflection_TokenConfigs_messageType struct{}

func (x fastReflection_TokenConfigs_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TokenConfigs)(nil)
}
func (x fastReflection_TokenConfigs_messageType) New() protoreflect.Message {
	return new(fastReflection_TokenConfigs)
}
func (x fastReflection_TokenConfigs_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenConfigs
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TokenConfigs) Descriptor() protoreflect.MessageDescriptor {
	return md_TokenConfigs
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TokenConfigs) Type() protoreflect.MessageType {
	return _fastReflection_TokenConfigs_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TokenConfigs) New() protoreflect.Message {
	return new(fastReflection_TokenConfigs)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TokenConfigs) Interface() protoreflect.ProtoMessage {
	return (*TokenConfigs)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TokenConfigs) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HandlerTokenUnit != "" {
		value := protoreflect.ValueOfString(x.HandlerTokenUnit)
		if !f(fd_TokenConfigs_handler_token_unit, value) {
			return
		}
	}
	if x.ClientPolicyId != "" {
		value := protoreflect.ValueOfString(x.ClientPolicyId)
		if !f(fd_TokenConfigs_client_policy_id, value) {
			return
		}
	}
	if x.ConnectionPolicyId != "" {
		value := protoreflect.ValueOfString(x.ConnectionPolicyId)
		if !f(fd_TokenConfigs_connection_policy_id, value) {
			return
		}
	}
	if x.ChannelPolicyId != "" {
		value := protoreflect.ValueOfString(x.ChannelPolicyId)
		if !f(fd_TokenConfigs_channel_policy_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TokenConfigs) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		return x.HandlerTokenUnit != ""
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		return x.ClientPolicyId != ""
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		return x.ConnectionPolicyId != ""
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		return x.ChannelPolicyId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenConfigs) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		x.HandlerTokenUnit = ""
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		x.ClientPolicyId = ""
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		x.ConnectionPolicyId = ""
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		x.ChannelPolicyId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TokenConfigs) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		value := x.HandlerTokenUnit
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		value := x.ClientPolicyId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		value := x.ConnectionPolicyId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		value := x.ChannelPolicyId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenConfigs) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		x.HandlerTokenUnit = value.Interface().(string)
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		x.ClientPolicyId = value.Interface().(string)
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		x.ConnectionPolicyId = value.Interface().(string)
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		x.ChannelPolicyId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenConfigs) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		panic(fmt.Errorf("field handler_token_unit of message ibc.clients.cardano.v1.TokenConfigs is not mutable"))
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		panic(fmt.Errorf("field client_policy_id of message ibc.clients.cardano.v1.TokenConfigs is not mutable"))
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		panic(fmt.Errorf("field connection_policy_id of message ibc.clients.cardano.v1.TokenConfigs is not mutable"))
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		panic(fmt.Errorf("field channel_policy_id of message ibc.clients.cardano.v1.TokenConfigs is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TokenConfigs) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.TokenConfigs.handler_token_unit":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.TokenConfigs.client_policy_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.TokenConfigs.connection_policy_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.TokenConfigs.channel_policy_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.TokenConfigs"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.TokenConfigs does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TokenConfigs) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.TokenConfigs", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TokenConfigs) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TokenConfigs) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TokenConfigs) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TokenConfigs) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TokenConfigs)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HandlerTokenUnit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ClientPolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ConnectionPolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelPolicyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TokenConfigs)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChannelPolicyId) > 0 {
			i -= len(x.ChannelPolicyId)
			copy(dAtA[i:], x.ChannelPolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelPolicyId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ConnectionPolicyId) > 0 {
			i -= len(x.ConnectionPolicyId)
			copy(dAtA[i:], x.ConnectionPolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConnectionPolicyId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ClientPolicyId) > 0 {
			i -= len(x.ClientPolicyId)
			copy(dAtA[i:], x.ClientPolicyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ClientPolicyId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.HandlerTokenUnit) > 0 {
			i -= len(x.HandlerTokenUnit)
			copy(dAtA[i:], x.HandlerTokenUnit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HandlerTokenUnit)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TokenConfigs)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenConfigs: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TokenConfigs: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HandlerTokenUnit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HandlerTokenUnit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ClientPolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ClientPolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConnectionPolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConnectionPolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelPolicyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelPolicyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ClientState_9_list)(nil)

type _ClientState_9_list struct {
	list *[]*Validator
}

func (x *_ClientState_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClientState_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ClientState_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	(*x.list)[i] = concreteValue
}

func (x *_ClientState_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClientState_9_list) AppendMutable() protoreflect.Value {
	v := new(Validator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ClientState_9_list) NewElement() protoreflect.Value {
	v := new(Validator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ClientState_10_list)(nil)

type _ClientState_10_list struct {
	list *[]*Validator
}

func (x *_ClientState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClientState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ClientState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	(*x.list)[i] = concreteValue
}

func (x *_ClientState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Validator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClientState_10_list) AppendMutable() protoreflect.Value {
	v := new(Validator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ClientState_10_list) NewElement() protoreflect.Value {
	v := new(Validator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ClientState_12_list)(nil)

type _ClientState_12_list struct {
	list *[]string
}

func (x *_ClientState_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClientState_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_ClientState_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ClientState_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClientState_12_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ClientState at list field UpgradePath as it is not of Message kind"))
}

func (x *_ClientState_12_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ClientState_12_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_ClientState_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ClientState                       protoreflect.MessageDescriptor
	fd_ClientState_chain_id              protoreflect.FieldDescriptor
	fd_ClientState_latest_height         protoreflect.FieldDescriptor
	fd_ClientState_frozen_height         protoreflect.FieldDescriptor
	fd_ClientState_valid_after           protoreflect.FieldDescriptor
	fd_ClientState_genesis_time          protoreflect.FieldDescriptor
	fd_ClientState_current_epoch         protoreflect.FieldDescriptor
	fd_ClientState_epoch_length          protoreflect.FieldDescriptor
	fd_ClientState_slot_per_kes_period   protoreflect.FieldDescriptor
	fd_ClientState_current_validator_set protoreflect.FieldDescriptor
	fd_ClientState_next_validator_set    protoreflect.FieldDescriptor
	fd_ClientState_trusting_period       protoreflect.FieldDescriptor
	fd_ClientState_upgrade_path          protoreflect.FieldDescriptor
	fd_ClientState_token_configs         protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_ClientState = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("ClientState")
	fd_ClientState_chain_id = md_ClientState.Fields().ByName("chain_id")
	fd_ClientState_latest_height = md_ClientState.Fields().ByName("latest_height")
	fd_ClientState_frozen_height = md_ClientState.Fields().ByName("frozen_height")
	fd_ClientState_valid_after = md_ClientState.Fields().ByName("valid_after")
	fd_ClientState_genesis_time = md_ClientState.Fields().ByName("genesis_time")
	fd_ClientState_current_epoch = md_ClientState.Fields().ByName("current_epoch")
	fd_ClientState_epoch_length = md_ClientState.Fields().ByName("epoch_length")
	fd_ClientState_slot_per_kes_period = md_ClientState.Fields().ByName("slot_per_kes_period")
	fd_ClientState_current_validator_set = md_ClientState.Fields().ByName("current_validator_set")
	fd_ClientState_next_validator_set = md_ClientState.Fields().ByName("next_validator_set")
	fd_ClientState_trusting_period = md_ClientState.Fields().ByName("trusting_period")
	fd_ClientState_upgrade_path = md_ClientState.Fields().ByName("upgrade_path")
	fd_ClientState_token_configs = md_ClientState.Fields().ByName("token_configs")
}

var _ protoreflect.Message = (*fastReflection_ClientState)(nil)

type fastReflection_ClientState ClientState

func (x *ClientState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClientState)(x)
}

func (x *ClientState) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ClientState_messageType fastReflection_ClientState_messageType
var _ protoreflect.MessageType = fastReflection_ClientState_messageType{}

type fastReflection_ClientState_messageType struct{}

func (x fastReflection_ClientState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClientState)(nil)
}
func (x fastReflection_ClientState_messageType) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}
func (x fastReflection_ClientState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClientState) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClientState) Type() protoreflect.MessageType {
	return _fastReflection_ClientState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClientState) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClientState) Interface() protoreflect.ProtoMessage {
	return (*ClientState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClientState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_ClientState_chain_id, value) {
			return
		}
	}
	if x.LatestHeight != nil {
		value := protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
		if !f(fd_ClientState_latest_height, value) {
			return
		}
	}
	if x.FrozenHeight != nil {
		value := protoreflect.ValueOfMessage(x.FrozenHeight.ProtoReflect())
		if !f(fd_ClientState_frozen_height, value) {
			return
		}
	}
	if x.ValidAfter != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValidAfter)
		if !f(fd_ClientState_valid_after, value) {
			return
		}
	}
	if x.GenesisTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GenesisTime)
		if !f(fd_ClientState_genesis_time, value) {
			return
		}
	}
	if x.CurrentEpoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentEpoch)
		if !f(fd_ClientState_current_epoch, value) {
			return
		}
	}
	if x.EpochLength != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochLength)
		if !f(fd_ClientState_epoch_length, value) {
			return
		}
	}
	if x.SlotPerKesPeriod != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SlotPerKesPeriod)
		if !f(fd_ClientState_slot_per_kes_period, value) {
			return
		}
	}
	if len(x.CurrentValidatorSet) != 0 {
		value := protoreflect.ValueOfList(&_ClientState_9_list{list: &x.CurrentValidatorSet})
		if !f(fd_ClientState_current_validator_set, value) {
			return
		}
	}
	if len(x.NextValidatorSet) != 0 {
		value := protoreflect.ValueOfList(&_ClientState_10_list{list: &x.NextValidatorSet})
		if !f(fd_ClientState_next_validator_set, value) {
			return
		}
	}
	if x.TrustingPeriod != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TrustingPeriod)
		if !f(fd_ClientState_trusting_period, value) {
			return
		}
	}
	if len(x.UpgradePath) != 0 {
		value := protoreflect.ValueOfList(&_ClientState_12_list{list: &x.UpgradePath})
		if !f(fd_ClientState_upgrade_path, value) {
			return
		}
	}
	if x.TokenConfigs != nil {
		value := protoreflect.ValueOfMessage(x.TokenConfigs.ProtoReflect())
		if !f(fd_ClientState_token_configs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClientState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		return x.ChainId != ""
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		return x.LatestHeight != nil
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		return x.FrozenHeight != nil
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		return x.ValidAfter != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		return x.GenesisTime != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		return x.CurrentEpoch != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		return x.EpochLength != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		return x.SlotPerKesPeriod != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		return len(x.CurrentValidatorSet) != 0
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		return len(x.NextValidatorSet) != 0
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		return x.TrustingPeriod != uint64(0)
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		return len(x.UpgradePath) != 0
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		return x.TokenConfigs != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		x.ChainId = ""
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		x.LatestHeight = nil
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		x.FrozenHeight = nil
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		x.ValidAfter = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		x.GenesisTime = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		x.CurrentEpoch = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		x.EpochLength = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		x.SlotPerKesPeriod = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		x.CurrentValidatorSet = nil
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		x.NextValidatorSet = nil
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		x.TrustingPeriod = uint64(0)
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		x.UpgradePath = nil
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		x.TokenConfigs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClientState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		value := x.LatestHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		value := x.FrozenHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		value := x.ValidAfter
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		value := x.GenesisTime
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		value := x.CurrentEpoch
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		value := x.EpochLength
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		value := x.SlotPerKesPeriod
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		if len(x.CurrentValidatorSet) == 0 {
			return protoreflect.ValueOfList(&_ClientState_9_list{})
		}
		listValue := &_ClientState_9_list{list: &x.CurrentValidatorSet}
		return protoreflect.ValueOfList(listValue)
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		if len(x.NextValidatorSet) == 0 {
			return protoreflect.ValueOfList(&_ClientState_10_list{})
		}
		listValue := &_ClientState_10_list{list: &x.NextValidatorSet}
		return protoreflect.ValueOfList(listValue)
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		value := x.TrustingPeriod
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		if len(x.UpgradePath) == 0 {
			return protoreflect.ValueOfList(&_ClientState_12_list{})
		}
		listValue := &_ClientState_12_list{list: &x.UpgradePath}
		return protoreflect.ValueOfList(listValue)
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		value := x.TokenConfigs
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		x.ChainId = value.Interface().(string)
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		x.LatestHeight = value.Message().Interface().(*Height)
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		x.FrozenHeight = value.Message().Interface().(*Height)
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		x.ValidAfter = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		x.GenesisTime = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		x.CurrentEpoch = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		x.EpochLength = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		x.SlotPerKesPeriod = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		lv := value.List()
		clv := lv.(*_ClientState_9_list)
		x.CurrentValidatorSet = *clv.list
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		lv := value.List()
		clv := lv.(*_ClientState_10_list)
		x.NextValidatorSet = *clv.list
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		x.TrustingPeriod = value.Uint()
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		lv := value.List()
		clv := lv.(*_ClientState_12_list)
		x.UpgradePath = *clv.list
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		x.TokenConfigs = value.Message().Interface().(*TokenConfigs)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		if x.LatestHeight == nil {
			x.LatestHeight = new(Height)
		}
		return protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		if x.FrozenHeight == nil {
			x.FrozenHeight = new(Height)
		}
		return protoreflect.ValueOfMessage(x.FrozenHeight.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		if x.CurrentValidatorSet == nil {
			x.CurrentValidatorSet = []*Validator{}
		}
		value := &_ClientState_9_list{list: &x.CurrentValidatorSet}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		if x.NextValidatorSet == nil {
			x.NextValidatorSet = []*Validator{}
		}
		value := &_ClientState_10_list{list: &x.NextValidatorSet}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		if x.UpgradePath == nil {
			x.UpgradePath = []string{}
		}
		value := &_ClientState_12_list{list: &x.UpgradePath}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		if x.TokenConfigs == nil {
			x.TokenConfigs = new(TokenConfigs)
		}
		return protoreflect.ValueOfMessage(x.TokenConfigs.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		panic(fmt.Errorf("field chain_id of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		panic(fmt.Errorf("field valid_after of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		panic(fmt.Errorf("field genesis_time of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		panic(fmt.Errorf("field current_epoch of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		panic(fmt.Errorf("field epoch_length of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		panic(fmt.Errorf("field slot_per_kes_period of message ibc.clients.cardano.v1.ClientState is not mutable"))
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		panic(fmt.Errorf("field trusting_period of message ibc.clients.cardano.v1.ClientState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClientState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.ClientState.chain_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.ClientState.latest_height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.frozen_height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.cardano.v1.ClientState.valid_after":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.genesis_time":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.current_epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.epoch_length":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.slot_per_kes_period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.current_validator_set":
		list := []*Validator{}
		return protoreflect.ValueOfList(&_ClientState_9_list{list: &list})
	case "ibc.clients.cardano.v1.ClientState.next_validator_set":
		list := []*Validator{}
		return protoreflect.ValueOfList(&_ClientState_10_list{list: &list})
	case "ibc.clients.cardano.v1.ClientState.trusting_period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.cardano.v1.ClientState.upgrade_path":
		list := []string{}
		return protoreflect.ValueOfList(&_ClientState_12_list{list: &list})
	case "ibc.clients.cardano.v1.ClientState.token_configs":
		m := new(TokenConfigs)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClientState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.ClientState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClientState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClientState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClientState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestHeight != nil {
			l = options.Size(x.LatestHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FrozenHeight != nil {
			l = options.Size(x.FrozenHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ValidAfter != 0 {
			n += 1 + runtime.Sov(uint64(x.ValidAfter))
		}
		if x.GenesisTime != 0 {
			n += 1 + runtime.Sov(uint64(x.GenesisTime))
		}
		if x.CurrentEpoch != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentEpoch))
		}
		if x.EpochLength != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochLength))
		}
		if x.SlotPerKesPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.SlotPerKesPeriod))
		}
		if len(x.CurrentValidatorSet) > 0 {
			for _, e := range x.CurrentValidatorSet {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.NextValidatorSet) > 0 {
			for _, e := range x.NextValidatorSet {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.TrustingPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.TrustingPeriod))
		}
		if len(x.UpgradePath) > 0 {
			for _, s := range x.UpgradePath {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.TokenConfigs != nil {
			l = options.Size(x.TokenConfigs)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TokenConfigs != nil {
			encoded, err := options.Marshal(x.TokenConfigs)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.UpgradePath) > 0 {
			for iNdEx := len(x.UpgradePath) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.UpgradePath[iNdEx])
				copy(dAtA[i:], x.UpgradePath[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UpgradePath[iNdEx])))
				i--
				dAtA[i] = 0x62
			}
		}
		if x.TrustingPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TrustingPeriod))
			i--
			dAtA[i] = 0x58
		}
		if len(x.NextValidatorSet) > 0 {
			for iNdEx := len(x.NextValidatorSet) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.NextValidatorSet[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.CurrentValidatorSet) > 0 {
			for iNdEx := len(x.CurrentValidatorSet) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrentValidatorSet[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.SlotPerKesPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SlotPerKesPeriod))
			i--
			dAtA[i] = 0x40
		}
		if x.EpochLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochLength))
			i--
			dAtA[i] = 0x38
		}
		if x.CurrentEpoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentEpoch))
			i--
			dAtA[i] = 0x30
		}
		if x.GenesisTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GenesisTime))
			i--
			dAtA[i] = 0x28
		}
		if x.ValidAfter != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValidAfter))
			i--
			dAtA[i] = 0x20
		}
		if x.FrozenHeight != nil {
			encoded, err := options.Marshal(x.FrozenHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.LatestHeight != nil {
			encoded, err := options.Marshal(x.LatestHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LatestHeight == nil {
					x.LatestHeight = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FrozenHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.FrozenHeight == nil {
					x.FrozenHeight = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.FrozenHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidAfter", wireType)
				}
				x.ValidAfter = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValidAfter |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GenesisTime", wireType)
				}
				x.GenesisTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GenesisTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentEpoch", wireType)
				}
				x.CurrentEpoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentEpoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochLength", wireType)
				}
				x.EpochLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochLength |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlotPerKesPeriod", wireType)
				}
				x.SlotPerKesPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SlotPerKesPeriod |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentValidatorSet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrentValidatorSet = append(x.CurrentValidatorSet, &Validator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrentValidatorSet[len(x.CurrentValidatorSet)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextValidatorSet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NextValidatorSet = append(x.NextValidatorSet, &Validator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NextValidatorSet[len(x.NextValidatorSet)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustingPeriod", wireType)
				}
				x.TrustingPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TrustingPeriod |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpgradePath", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UpgradePath = append(x.UpgradePath, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenConfigs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TokenConfigs == nil {
					x.TokenConfigs = &TokenConfigs{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenConfigs); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Misbehaviour              protoreflect.MessageDescriptor
	fd_Misbehaviour_client_id    protoreflect.FieldDescriptor
	fd_Misbehaviour_block_data_1 protoreflect.FieldDescriptor
	fd_Misbehaviour_block_data_2 protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_cardano_v1_cardano_proto_init()
	md_Misbehaviour = File_ibc_clients_cardano_v1_cardano_proto.Messages().ByName("Misbehaviour")
	fd_Misbehaviour_client_id = md_Misbehaviour.Fields().ByName("client_id")
	fd_Misbehaviour_block_data_1 = md_Misbehaviour.Fields().ByName("block_data_1")
	fd_Misbehaviour_block_data_2 = md_Misbehaviour.Fields().ByName("block_data_2")
}

var _ protoreflect.Message = (*fastReflection_Misbehaviour)(nil)

type fastReflection_Misbehaviour Misbehaviour

func (x *Misbehaviour) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Misbehaviour)(x)
}

func (x *Misbehaviour) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Misbehaviour_messageType fastReflection_Misbehaviour_messageType
var _ protoreflect.MessageType = fastReflection_Misbehaviour_messageType{}

type fastReflection_Misbehaviour_messageType struct{}

func (x fastReflection_Misbehaviour_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Misbehaviour)(nil)
}
func (x fastReflection_Misbehaviour_messageType) New() protoreflect.Message {
	return new(fastReflection_Misbehaviour)
}
func (x fastReflection_Misbehaviour_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Misbehaviour
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Misbehaviour) Descriptor() protoreflect.MessageDescriptor {
	return md_Misbehaviour
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Misbehaviour) Type() protoreflect.MessageType {
	return _fastReflection_Misbehaviour_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Misbehaviour) New() protoreflect.Message {
	return new(fastReflection_Misbehaviour)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Misbehaviour) Interface() protoreflect.ProtoMessage {
	return (*Misbehaviour)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Misbehaviour) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ClientId != "" {
		value := protoreflect.ValueOfString(x.ClientId)
		if !f(fd_Misbehaviour_client_id, value) {
			return
		}
	}
	if x.BlockData_1 != nil {
		value := protoreflect.ValueOfMessage(x.BlockData_1.ProtoReflect())
		if !f(fd_Misbehaviour_block_data_1, value) {
			return
		}
	}
	if x.BlockData_2 != nil {
		value := protoreflect.ValueOfMessage(x.BlockData_2.ProtoReflect())
		if !f(fd_Misbehaviour_block_data_2, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Misbehaviour) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		return x.ClientId != ""
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		return x.BlockData_1 != nil
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		return x.BlockData_2 != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		x.ClientId = ""
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		x.BlockData_1 = nil
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		x.BlockData_2 = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Misbehaviour) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		value := x.ClientId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		value := x.BlockData_1
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		value := x.BlockData_2
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		x.ClientId = value.Interface().(string)
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		x.BlockData_1 = value.Message().Interface().(*BlockData)
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		x.BlockData_2 = value.Message().Interface().(*BlockData)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		if x.BlockData_1 == nil {
			x.BlockData_1 = new(BlockData)
		}
		return protoreflect.ValueOfMessage(x.BlockData_1.ProtoReflect())
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		if x.BlockData_2 == nil {
			x.BlockData_2 = new(BlockData)
		}
		return protoreflect.ValueOfMessage(x.BlockData_2.ProtoReflect())
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		panic(fmt.Errorf("field client_id of message ibc.clients.cardano.v1.Misbehaviour is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Misbehaviour) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.cardano.v1.Misbehaviour.client_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_1":
		m := new(BlockData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.cardano.v1.Misbehaviour.block_data_2":
		m := new(BlockData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.cardano.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.cardano.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Misbehaviour) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.cardano.v1.Misbehaviour", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Misbehaviour) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Misbehaviour) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Misbehaviour) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ClientId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockData_1 != nil {
			l = options.Size(x.BlockData_1)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockData_2 != nil {
			l = options.Size(x.BlockData_2)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockData_2 != nil {
			encoded, err := options.Marshal(x.BlockData_2)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockData_1 != nil {
			encoded, err := options.Marshal(x.BlockData_1)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ClientId) > 0 {
			i -= len(x.ClientId)
			copy(dAtA[i:], x.ClientId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ClientId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Misbehaviour: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Misbehaviour: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ClientId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockData_1", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockData_1 == nil {
					x.BlockData_1 = &BlockData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockData_1); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockData_2", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockData_2 == nil {
					x.BlockData_2 = &BlockData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockData_2); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ibc/clients/cardano/v1/cardano.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the revision that the client is currently on
	RevisionNumber uint64 `protobuf:"varint,1,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	// the height within the given revision
	RevisionHeight uint64 `protobuf:"varint,2,opt,name=revision_height,json=revisionHeight,proto3" json:"revision_height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{0}
}

func (x *Height) GetRevisionNumber() uint64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *Height) GetRevisionHeight() uint64 {
	if x != nil {
		return x.RevisionHeight
	}
	return 0
}

// ConsensusState defines the consensus state from Tendermint.
type ConsensusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp that corresponds to the block height in which the ConsensusState
	// was stored. Will be Chain start time + slot, unit: seconds
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Slot at consensus height
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *ConsensusState) Reset() {
	*x = ConsensusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusState) ProtoMessage() {}

// Deprecated: Use ConsensusState.ProtoReflect.Descriptor instead.
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{1}
}

func (x *ConsensusState) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConsensusState) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// vrf key hash of pool operator
	VrfKeyHash string `protobuf:"bytes,1,opt,name=vrf_key_hash,json=vrfKeyHash,proto3" json:"vrf_key_hash,omitempty"`
	// pool id of operator
	PoolId string `protobuf:"bytes,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{2}
}

func (x *Validator) GetVrfKeyHash() string {
	if x != nil {
		return x.VrfKeyHash
	}
	return ""
}

func (x *Validator) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type BlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block number
	Height *Height `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	// Slot number
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Block hash
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hash of previous block
	PrevHash string `protobuf:"bytes,4,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// Epoch number
	EpochNo uint64 `protobuf:"varint,5,opt,name=epoch_no,json=epochNo,proto3" json:"epoch_no,omitempty"`
	// Hex string of block header to cbor
	HeaderCbor string `protobuf:"bytes,6,opt,name=header_cbor,json=headerCbor,proto3" json:"header_cbor,omitempty"`
	// Hex string of block txs to cbor
	BodyCbor string `protobuf:"bytes,7,opt,name=body_cbor,json=bodyCbor,proto3" json:"body_cbor,omitempty"`
	// Hex string of current epoch's epoch nonce, calculated at the start of each epoch,
	// calculated by evolving nonce of block inside epoch and last block nonce of prev block
	// Used to construct vrf value, also to verify slot leader is valid
	EpochNonce string `protobuf:"bytes,8,opt,name=epoch_nonce,json=epochNonce,proto3" json:"epoch_nonce,omitempty"`
	// Time stamp of current block, unit: seconds
	Timestamp uint64 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Chain id
	ChainId string `protobuf:"bytes,10,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *BlockData) Reset() {
	*x = BlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockData) ProtoMessage() {}

// Deprecated: Use BlockData.ProtoReflect.Descriptor instead.
func (*BlockData) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{3}
}

func (x *BlockData) GetHeight() *Height {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *BlockData) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlockData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockData) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *BlockData) GetEpochNo() uint64 {
	if x != nil {
		return x.EpochNo
	}
	return 0
}

func (x *BlockData) GetHeaderCbor() string {
	if x != nil {
		return x.HeaderCbor
	}
	return ""
}

func (x *BlockData) GetBodyCbor() string {
	if x != nil {
		return x.BodyCbor
	}
	return ""
}

func (x *BlockData) GetEpochNonce() string {
	if x != nil {
		return x.EpochNonce
	}
	return ""
}

func (x *BlockData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockData) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type TokenConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IBC handler token uint (policyID + name), in hex format
	HandlerTokenUnit string `protobuf:"bytes,1,opt,name=handler_token_unit,json=handlerTokenUnit,proto3" json:"handler_token_unit,omitempty"`
	// IBC client token policyID, in hex format
	ClientPolicyId string `protobuf:"bytes,2,opt,name=client_policy_id,json=clientPolicyId,proto3" json:"client_policy_id,omitempty"`
	// IBC connection token policyID, in hex format
	ConnectionPolicyId string `protobuf:"bytes,3,opt,name=connection_policy_id,json=connectionPolicyId,proto3" json:"connection_policy_id,omitempty"`
	// IBC channel token policyID, in hex format
	ChannelPolicyId string `protobuf:"bytes,4,opt,name=channel_policy_id,json=channelPolicyId,proto3" json:"channel_policy_id,omitempty"`
}

func (x *TokenConfigs) Reset() {
	*x = TokenConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenConfigs) ProtoMessage() {}

// Deprecated: Use TokenConfigs.ProtoReflect.Descriptor instead.
func (*TokenConfigs) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{4}
}

func (x *TokenConfigs) GetHandlerTokenUnit() string {
	if x != nil {
		return x.HandlerTokenUnit
	}
	return ""
}

func (x *TokenConfigs) GetClientPolicyId() string {
	if x != nil {
		return x.ClientPolicyId
	}
	return ""
}

func (x *TokenConfigs) GetConnectionPolicyId() string {
	if x != nil {
		return x.ConnectionPolicyId
	}
	return ""
}

func (x *TokenConfigs) GetChannelPolicyId() string {
	if x != nil {
		return x.ChannelPolicyId
	}
	return ""
}

type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chain id
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Latest height the client was updated to
	LatestHeight *Height `protobuf:"bytes,2,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	// Block height when the client was frozen due to a misbehaviour
	FrozenHeight *Height `protobuf:"bytes,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	// To support finality, this state will be mark as finality after `valid_after` slots, default 0, unit: slot
	ValidAfter uint64 `protobuf:"varint,4,opt,name=valid_after,json=validAfter,proto3" json:"valid_after,omitempty"`
	// Time when chain start, unit: seconds
	GenesisTime uint64 `protobuf:"varint,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	// Epoch number of current chain state
	CurrentEpoch uint64 `protobuf:"varint,6,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	// Number of slots of this current epoch
	EpochLength uint64 `protobuf:"varint,7,opt,name=epoch_length,json=epochLength,proto3" json:"epoch_length,omitempty"`
	// Number of slots of per KES period
	SlotPerKesPeriod uint64 `protobuf:"varint,8,opt,name=slot_per_kes_period,json=slotPerKesPeriod,proto3" json:"slot_per_kes_period,omitempty"`
	// Current epoch validator set
	CurrentValidatorSet []*Validator `protobuf:"bytes,9,rep,name=current_validator_set,json=currentValidatorSet,proto3" json:"current_validator_set,omitempty"`
	// Next epoch validator set
	NextValidatorSet []*Validator `protobuf:"bytes,10,rep,name=next_validator_set,json=nextValidatorSet,proto3" json:"next_validator_set,omitempty"`
	TrustingPeriod   uint64       `protobuf:"varint,11,opt,name=trusting_period,json=trustingPeriod,proto3" json:"trusting_period,omitempty"`
	// Path at which next upgraded client will be committed.
	UpgradePath []string `protobuf:"bytes,12,rep,name=upgrade_path,json=upgradePath,proto3" json:"upgrade_path,omitempty"`
	// IBC related auth token policy configs
	TokenConfigs *TokenConfigs `protobuf:"bytes,13,opt,name=token_configs,json=tokenConfigs,proto3" json:"token_configs,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{5}
}

func (x *ClientState) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ClientState) GetLatestHeight() *Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *ClientState) GetFrozenHeight() *Height {
	if x != nil {
		return x.FrozenHeight
	}
	return nil
}

func (x *ClientState) GetValidAfter() uint64 {
	if x != nil {
		return x.ValidAfter
	}
	return 0
}

func (x *ClientState) GetGenesisTime() uint64 {
	if x != nil {
		return x.GenesisTime
	}
	return 0
}

func (x *ClientState) GetCurrentEpoch() uint64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *ClientState) GetEpochLength() uint64 {
	if x != nil {
		return x.EpochLength
	}
	return 0
}

func (x *ClientState) GetSlotPerKesPeriod() uint64 {
	if x != nil {
		return x.SlotPerKesPeriod
	}
	return 0
}

func (x *ClientState) GetCurrentValidatorSet() []*Validator {
	if x != nil {
		return x.CurrentValidatorSet
	}
	return nil
}

func (x *ClientState) GetNextValidatorSet() []*Validator {
	if x != nil {
		return x.NextValidatorSet
	}
	return nil
}

func (x *ClientState) GetTrustingPeriod() uint64 {
	if x != nil {
		return x.TrustingPeriod
	}
	return 0
}

func (x *ClientState) GetUpgradePath() []string {
	if x != nil {
		return x.UpgradePath
	}
	return nil
}

func (x *ClientState) GetTokenConfigs() *TokenConfigs {
	if x != nil {
		return x.TokenConfigs
	}
	return nil
}

type Misbehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClientID is deprecated
	//
	// Deprecated: Do not use.
	ClientId    string     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	BlockData_1 *BlockData `protobuf:"bytes,2,opt,name=block_data_1,json=blockData1,proto3" json:"block_data_1,omitempty"`
	BlockData_2 *BlockData `protobuf:"bytes,3,opt,name=block_data_2,json=blockData2,proto3" json:"block_data_2,omitempty"`
}

func (x *Misbehaviour) Reset() {
	*x = Misbehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_cardano_v1_cardano_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Misbehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Misbehaviour) ProtoMessage() {}

// Deprecated: Use Misbehaviour.ProtoReflect.Descriptor instead.
func (*Misbehaviour) Descriptor() ([]byte, []int) {
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *Misbehaviour) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Misbehaviour) GetBlockData_1() *BlockData {
	if x != nil {
		return x.BlockData_1
	}
	return nil
}

func (x *Misbehaviour) GetBlockData_2() *BlockData {
	if x != nil {
		return x.BlockData_2
	}
	return nil
}

var File_ibc_clients_cardano_v1_cardano_proto protoreflect.FileDescriptor

var file_ibc_clients_cardano_v1_cardano_proto_rawDesc = []byte{
	0x0a, 0x24, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0x22, 0x48, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x3a, 0x04,
	0x88, 0xa0, 0x1f, 0x00, 0x22, 0x4c, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x72, 0x66, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x72, 0x66, 0x4b, 0x65, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x3a, 0x04, 0x88, 0xa0,
	0x1f, 0x00, 0x22, 0xc1, 0x02, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x62, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x62, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x63, 0x62, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f,
	0x64, 0x79, 0x43, 0x62, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xca, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x3a, 0x04, 0x88,
	0xa0, 0x1f, 0x00, 0x22, 0xb2, 0x05, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x73, 0x6c, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x4b, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x4d, 0x69, 0x73,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x31, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x31, 0x12,
	0x53, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x0a, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x32, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x32, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x42, 0xd8, 0x01, 0x0a, 0x1a, 0x63,
	0x6f, 0x6d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x76, 0x65, 0x73, 0x73, 0x65,
	0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x62, 0x63, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49,
	0x43, 0x43, 0xaa, 0x02, 0x16, 0x49, 0x62, 0x63, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x49, 0x62,
	0x63, 0x5c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e,
	0x6f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x49, 0x62, 0x63, 0x5c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x5c, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x49, 0x62, 0x63, 0x3a,
	0x3a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e,
	0x6f, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_clients_cardano_v1_cardano_proto_rawDescOnce sync.Once
	file_ibc_clients_cardano_v1_cardano_proto_rawDescData = file_ibc_clients_cardano_v1_cardano_proto_rawDesc
)

func file_ibc_clients_cardano_v1_cardano_proto_rawDescGZIP() []byte {
	file_ibc_clients_cardano_v1_cardano_proto_rawDescOnce.Do(func() {
		file_ibc_clients_cardano_v1_cardano_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_clients_cardano_v1_cardano_proto_rawDescData)
	})
	return file_ibc_clients_cardano_v1_cardano_proto_rawDescData
}

var file_ibc_clients_cardano_v1_cardano_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ibc_clients_cardano_v1_cardano_proto_goTypes = []interface{}{
	(*Height)(nil),         // 0: ibc.clients.cardano.v1.Height
	(*ConsensusState)(nil), // 1: ibc.clients.cardano.v1.ConsensusState
	(*Validator)(nil),      // 2: ibc.clients.cardano.v1.Validator
	(*BlockData)(nil),      // 3: ibc.clients.cardano.v1.BlockData
	(*TokenConfigs)(nil),   // 4: ibc.clients.cardano.v1.TokenConfigs
	(*ClientState)(nil),    // 5: ibc.clients.cardano.v1.ClientState
	(*Misbehaviour)(nil),   // 6: ibc.clients.cardano.v1.Misbehaviour
}
var file_ibc_clients_cardano_v1_cardano_proto_depIdxs = []int32{
	0, // 0: ibc.clients.cardano.v1.BlockData.height:type_name -> ibc.clients.cardano.v1.Height
	0, // 1: ibc.clients.cardano.v1.ClientState.latest_height:type_name -> ibc.clients.cardano.v1.Height
	0, // 2: ibc.clients.cardano.v1.ClientState.frozen_height:type_name -> ibc.clients.cardano.v1.Height
	2, // 3: ibc.clients.cardano.v1.ClientState.current_validator_set:type_name -> ibc.clients.cardano.v1.Validator
	2, // 4: ibc.clients.cardano.v1.ClientState.next_validator_set:type_name -> ibc.clients.cardano.v1.Validator
	4, // 5: ibc.clients.cardano.v1.ClientState.token_configs:type_name -> ibc.clients.cardano.v1.TokenConfigs
	3, // 6: ibc.clients.cardano.v1.Misbehaviour.block_data_1:type_name -> ibc.clients.cardano.v1.BlockData
	3, // 7: ibc.clients.cardano.v1.Misbehaviour.block_data_2:type_name -> ibc.clients.cardano.v1.BlockData
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ibc_clients_cardano_v1_cardano_proto_init() }
func file_ibc_clients_cardano_v1_cardano_proto_init() {
	if File_ibc_clients_cardano_v1_cardano_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_cardano_v1_cardano_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Misbehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_clients_cardano_v1_cardano_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_clients_cardano_v1_cardano_proto_goTypes,
		DependencyIndexes: file_ibc_clients_cardano_v1_cardano_proto_depIdxs,
		MessageInfos:      file_ibc_clients_cardano_v1_cardano_proto_msgTypes,
	}.Build()
	File_ibc_clients_cardano_v1_cardano_proto = out.File
	file_ibc_clients_cardano_v1_cardano_proto_rawDesc = nil
	file_ibc_clients_cardano_v1_cardano_proto_goTypes = nil
	file_ibc_clients_cardano_v1_cardano_proto_depIdxs = nil
}
