// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package vesseloracle

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

var (
	md_VesseloraclePacketData                                    protoreflect.MessageDescriptor
	fd_VesseloraclePacketData_noData                             protoreflect.FieldDescriptor
	fd_VesseloraclePacketData_consolidatedDataReportPacketPacket protoreflect.FieldDescriptor
)

func init() {
	file_vesseloracle_vesseloracle_packet_proto_init()
	md_VesseloraclePacketData = File_vesseloracle_vesseloracle_packet_proto.Messages().ByName("VesseloraclePacketData")
	fd_VesseloraclePacketData_noData = md_VesseloraclePacketData.Fields().ByName("noData")
	fd_VesseloraclePacketData_consolidatedDataReportPacketPacket = md_VesseloraclePacketData.Fields().ByName("consolidatedDataReportPacketPacket")
}

var _ protoreflect.Message = (*fastReflection_VesseloraclePacketData)(nil)

type fastReflection_VesseloraclePacketData VesseloraclePacketData

func (x *VesseloraclePacketData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VesseloraclePacketData)(x)
}

func (x *VesseloraclePacketData) slowProtoReflect() protoreflect.Message {
	mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VesseloraclePacketData_messageType fastReflection_VesseloraclePacketData_messageType
var _ protoreflect.MessageType = fastReflection_VesseloraclePacketData_messageType{}

type fastReflection_VesseloraclePacketData_messageType struct{}

func (x fastReflection_VesseloraclePacketData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VesseloraclePacketData)(nil)
}
func (x fastReflection_VesseloraclePacketData_messageType) New() protoreflect.Message {
	return new(fastReflection_VesseloraclePacketData)
}
func (x fastReflection_VesseloraclePacketData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VesseloraclePacketData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VesseloraclePacketData) Descriptor() protoreflect.MessageDescriptor {
	return md_VesseloraclePacketData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VesseloraclePacketData) Type() protoreflect.MessageType {
	return _fastReflection_VesseloraclePacketData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VesseloraclePacketData) New() protoreflect.Message {
	return new(fastReflection_VesseloraclePacketData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VesseloraclePacketData) Interface() protoreflect.ProtoMessage {
	return (*VesseloraclePacketData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VesseloraclePacketData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Packet != nil {
		switch o := x.Packet.(type) {
		case *VesseloraclePacketData_NoData:
			v := o.NoData
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_VesseloraclePacketData_noData, value) {
				return
			}
		case *VesseloraclePacketData_ConsolidatedDataReportPacketPacket:
			v := o.ConsolidatedDataReportPacketPacket
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_VesseloraclePacketData_consolidatedDataReportPacketPacket, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VesseloraclePacketData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		if x.Packet == nil {
			return false
		} else if _, ok := x.Packet.(*VesseloraclePacketData_NoData); ok {
			return true
		} else {
			return false
		}
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		if x.Packet == nil {
			return false
		} else if _, ok := x.Packet.(*VesseloraclePacketData_ConsolidatedDataReportPacketPacket); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VesseloraclePacketData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		x.Packet = nil
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		x.Packet = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VesseloraclePacketData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		if x.Packet == nil {
			return protoreflect.ValueOfMessage((*NoData)(nil).ProtoReflect())
		} else if v, ok := x.Packet.(*VesseloraclePacketData_NoData); ok {
			return protoreflect.ValueOfMessage(v.NoData.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*NoData)(nil).ProtoReflect())
		}
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		if x.Packet == nil {
			return protoreflect.ValueOfMessage((*ConsolidatedDataReportPacketPacketData)(nil).ProtoReflect())
		} else if v, ok := x.Packet.(*VesseloraclePacketData_ConsolidatedDataReportPacketPacket); ok {
			return protoreflect.ValueOfMessage(v.ConsolidatedDataReportPacketPacket.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*ConsolidatedDataReportPacketPacketData)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VesseloraclePacketData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		cv := value.Message().Interface().(*NoData)
		x.Packet = &VesseloraclePacketData_NoData{NoData: cv}
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		cv := value.Message().Interface().(*ConsolidatedDataReportPacketPacketData)
		x.Packet = &VesseloraclePacketData_ConsolidatedDataReportPacketPacket{ConsolidatedDataReportPacketPacket: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VesseloraclePacketData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		if x.Packet == nil {
			value := &NoData{}
			oneofValue := &VesseloraclePacketData_NoData{NoData: value}
			x.Packet = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Packet.(type) {
		case *VesseloraclePacketData_NoData:
			return protoreflect.ValueOfMessage(m.NoData.ProtoReflect())
		default:
			value := &NoData{}
			oneofValue := &VesseloraclePacketData_NoData{NoData: value}
			x.Packet = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		if x.Packet == nil {
			value := &ConsolidatedDataReportPacketPacketData{}
			oneofValue := &VesseloraclePacketData_ConsolidatedDataReportPacketPacket{ConsolidatedDataReportPacketPacket: value}
			x.Packet = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Packet.(type) {
		case *VesseloraclePacketData_ConsolidatedDataReportPacketPacket:
			return protoreflect.ValueOfMessage(m.ConsolidatedDataReportPacketPacket.ProtoReflect())
		default:
			value := &ConsolidatedDataReportPacketPacketData{}
			oneofValue := &VesseloraclePacketData_ConsolidatedDataReportPacketPacket{ConsolidatedDataReportPacketPacket: value}
			x.Packet = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VesseloraclePacketData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.noData":
		value := &NoData{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket":
		value := &ConsolidatedDataReportPacketPacketData{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.VesseloraclePacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.VesseloraclePacketData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VesseloraclePacketData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "vesseloracle.vesseloracle.VesseloraclePacketData.packet":
		if x.Packet == nil {
			return nil
		}
		switch x.Packet.(type) {
		case *VesseloraclePacketData_NoData:
			return x.Descriptor().Fields().ByName("noData")
		case *VesseloraclePacketData_ConsolidatedDataReportPacketPacket:
			return x.Descriptor().Fields().ByName("consolidatedDataReportPacketPacket")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in vesseloracle.vesseloracle.VesseloraclePacketData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VesseloraclePacketData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VesseloraclePacketData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VesseloraclePacketData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VesseloraclePacketData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VesseloraclePacketData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		switch x := x.Packet.(type) {
		case *VesseloraclePacketData_NoData:
			if x == nil {
				break
			}
			l = options.Size(x.NoData)
			n += 1 + l + runtime.Sov(uint64(l))
		case *VesseloraclePacketData_ConsolidatedDataReportPacketPacket:
			if x == nil {
				break
			}
			l = options.Size(x.ConsolidatedDataReportPacketPacket)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VesseloraclePacketData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Packet.(type) {
		case *VesseloraclePacketData_NoData:
			encoded, err := options.Marshal(x.NoData)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		case *VesseloraclePacketData_ConsolidatedDataReportPacketPacket:
			encoded, err := options.Marshal(x.ConsolidatedDataReportPacketPacket)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VesseloraclePacketData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VesseloraclePacketData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VesseloraclePacketData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NoData", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &NoData{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Packet = &VesseloraclePacketData_NoData{v}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConsolidatedDataReportPacketPacket", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &ConsolidatedDataReportPacketPacketData{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Packet = &VesseloraclePacketData_ConsolidatedDataReportPacketPacket{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_NoData protoreflect.MessageDescriptor
)

func init() {
	file_vesseloracle_vesseloracle_packet_proto_init()
	md_NoData = File_vesseloracle_vesseloracle_packet_proto.Messages().ByName("NoData")
}

var _ protoreflect.Message = (*fastReflection_NoData)(nil)

type fastReflection_NoData NoData

func (x *NoData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_NoData)(x)
}

func (x *NoData) slowProtoReflect() protoreflect.Message {
	mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_NoData_messageType fastReflection_NoData_messageType
var _ protoreflect.MessageType = fastReflection_NoData_messageType{}

type fastReflection_NoData_messageType struct{}

func (x fastReflection_NoData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_NoData)(nil)
}
func (x fastReflection_NoData_messageType) New() protoreflect.Message {
	return new(fastReflection_NoData)
}
func (x fastReflection_NoData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_NoData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_NoData) Descriptor() protoreflect.MessageDescriptor {
	return md_NoData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_NoData) Type() protoreflect.MessageType {
	return _fastReflection_NoData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_NoData) New() protoreflect.Message {
	return new(fastReflection_NoData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_NoData) Interface() protoreflect.ProtoMessage {
	return (*NoData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_NoData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_NoData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_NoData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_NoData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.NoData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.NoData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_NoData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in vesseloracle.vesseloracle.NoData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_NoData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_NoData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_NoData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_NoData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*NoData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*NoData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*NoData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NoData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: NoData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ConsolidatedDataReportPacketPacketData                protoreflect.MessageDescriptor
	fd_ConsolidatedDataReportPacketPacketData_imo            protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_ts             protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_totalSamples   protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_etaOutliers    protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_etaMeanCleaned protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_etaMeanAll     protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_etaStdCleaned  protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_etaStdAll      protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_depport        protoreflect.FieldDescriptor
	fd_ConsolidatedDataReportPacketPacketData_depportScore   protoreflect.FieldDescriptor
)

func init() {
	file_vesseloracle_vesseloracle_packet_proto_init()
	md_ConsolidatedDataReportPacketPacketData = File_vesseloracle_vesseloracle_packet_proto.Messages().ByName("ConsolidatedDataReportPacketPacketData")
	fd_ConsolidatedDataReportPacketPacketData_imo = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("imo")
	fd_ConsolidatedDataReportPacketPacketData_ts = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("ts")
	fd_ConsolidatedDataReportPacketPacketData_totalSamples = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("totalSamples")
	fd_ConsolidatedDataReportPacketPacketData_etaOutliers = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("etaOutliers")
	fd_ConsolidatedDataReportPacketPacketData_etaMeanCleaned = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("etaMeanCleaned")
	fd_ConsolidatedDataReportPacketPacketData_etaMeanAll = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("etaMeanAll")
	fd_ConsolidatedDataReportPacketPacketData_etaStdCleaned = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("etaStdCleaned")
	fd_ConsolidatedDataReportPacketPacketData_etaStdAll = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("etaStdAll")
	fd_ConsolidatedDataReportPacketPacketData_depport = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("depport")
	fd_ConsolidatedDataReportPacketPacketData_depportScore = md_ConsolidatedDataReportPacketPacketData.Fields().ByName("depportScore")
}

var _ protoreflect.Message = (*fastReflection_ConsolidatedDataReportPacketPacketData)(nil)

type fastReflection_ConsolidatedDataReportPacketPacketData ConsolidatedDataReportPacketPacketData

func (x *ConsolidatedDataReportPacketPacketData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ConsolidatedDataReportPacketPacketData)(x)
}

func (x *ConsolidatedDataReportPacketPacketData) slowProtoReflect() protoreflect.Message {
	mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ConsolidatedDataReportPacketPacketData_messageType fastReflection_ConsolidatedDataReportPacketPacketData_messageType
var _ protoreflect.MessageType = fastReflection_ConsolidatedDataReportPacketPacketData_messageType{}

type fastReflection_ConsolidatedDataReportPacketPacketData_messageType struct{}

func (x fastReflection_ConsolidatedDataReportPacketPacketData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ConsolidatedDataReportPacketPacketData)(nil)
}
func (x fastReflection_ConsolidatedDataReportPacketPacketData_messageType) New() protoreflect.Message {
	return new(fastReflection_ConsolidatedDataReportPacketPacketData)
}
func (x fastReflection_ConsolidatedDataReportPacketPacketData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsolidatedDataReportPacketPacketData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsolidatedDataReportPacketPacketData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Type() protoreflect.MessageType {
	return _fastReflection_ConsolidatedDataReportPacketPacketData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) New() protoreflect.Message {
	return new(fastReflection_ConsolidatedDataReportPacketPacketData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Interface() protoreflect.ProtoMessage {
	return (*ConsolidatedDataReportPacketPacketData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Imo != "" {
		value := protoreflect.ValueOfString(x.Imo)
		if !f(fd_ConsolidatedDataReportPacketPacketData_imo, value) {
			return
		}
	}
	if x.Ts != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Ts)
		if !f(fd_ConsolidatedDataReportPacketPacketData_ts, value) {
			return
		}
	}
	if x.TotalSamples != int32(0) {
		value := protoreflect.ValueOfInt32(x.TotalSamples)
		if !f(fd_ConsolidatedDataReportPacketPacketData_totalSamples, value) {
			return
		}
	}
	if x.EtaOutliers != int32(0) {
		value := protoreflect.ValueOfInt32(x.EtaOutliers)
		if !f(fd_ConsolidatedDataReportPacketPacketData_etaOutliers, value) {
			return
		}
	}
	if x.EtaMeanCleaned != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EtaMeanCleaned)
		if !f(fd_ConsolidatedDataReportPacketPacketData_etaMeanCleaned, value) {
			return
		}
	}
	if x.EtaMeanAll != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EtaMeanAll)
		if !f(fd_ConsolidatedDataReportPacketPacketData_etaMeanAll, value) {
			return
		}
	}
	if x.EtaStdCleaned != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EtaStdCleaned)
		if !f(fd_ConsolidatedDataReportPacketPacketData_etaStdCleaned, value) {
			return
		}
	}
	if x.EtaStdAll != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EtaStdAll)
		if !f(fd_ConsolidatedDataReportPacketPacketData_etaStdAll, value) {
			return
		}
	}
	if x.Depport != "" {
		value := protoreflect.ValueOfString(x.Depport)
		if !f(fd_ConsolidatedDataReportPacketPacketData_depport, value) {
			return
		}
	}
	if x.DepportScore != int32(0) {
		value := protoreflect.ValueOfInt32(x.DepportScore)
		if !f(fd_ConsolidatedDataReportPacketPacketData_depportScore, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		return x.Imo != ""
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		return x.Ts != uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		return x.TotalSamples != int32(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		return x.EtaOutliers != int32(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		return x.EtaMeanCleaned != uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		return x.EtaMeanAll != uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		return x.EtaStdCleaned != uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		return x.EtaStdAll != uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		return x.Depport != ""
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		return x.DepportScore != int32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		x.Imo = ""
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		x.Ts = uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		x.TotalSamples = int32(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		x.EtaOutliers = int32(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		x.EtaMeanCleaned = uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		x.EtaMeanAll = uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		x.EtaStdCleaned = uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		x.EtaStdAll = uint64(0)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		x.Depport = ""
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		x.DepportScore = int32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		value := x.Imo
		return protoreflect.ValueOfString(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		value := x.Ts
		return protoreflect.ValueOfUint64(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		value := x.TotalSamples
		return protoreflect.ValueOfInt32(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		value := x.EtaOutliers
		return protoreflect.ValueOfInt32(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		value := x.EtaMeanCleaned
		return protoreflect.ValueOfUint64(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		value := x.EtaMeanAll
		return protoreflect.ValueOfUint64(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		value := x.EtaStdCleaned
		return protoreflect.ValueOfUint64(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		value := x.EtaStdAll
		return protoreflect.ValueOfUint64(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		value := x.Depport
		return protoreflect.ValueOfString(value)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		value := x.DepportScore
		return protoreflect.ValueOfInt32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		x.Imo = value.Interface().(string)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		x.Ts = value.Uint()
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		x.TotalSamples = int32(value.Int())
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		x.EtaOutliers = int32(value.Int())
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		x.EtaMeanCleaned = value.Uint()
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		x.EtaMeanAll = value.Uint()
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		x.EtaStdCleaned = value.Uint()
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		x.EtaStdAll = value.Uint()
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		x.Depport = value.Interface().(string)
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		x.DepportScore = int32(value.Int())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		panic(fmt.Errorf("field imo of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		panic(fmt.Errorf("field ts of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		panic(fmt.Errorf("field totalSamples of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		panic(fmt.Errorf("field etaOutliers of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		panic(fmt.Errorf("field etaMeanCleaned of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		panic(fmt.Errorf("field etaMeanAll of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		panic(fmt.Errorf("field etaStdCleaned of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		panic(fmt.Errorf("field etaStdAll of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		panic(fmt.Errorf("field depport of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		panic(fmt.Errorf("field depportScore of message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.imo":
		return protoreflect.ValueOfString("")
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.ts":
		return protoreflect.ValueOfUint64(uint64(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.totalSamples":
		return protoreflect.ValueOfInt32(int32(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaOutliers":
		return protoreflect.ValueOfInt32(int32(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanCleaned":
		return protoreflect.ValueOfUint64(uint64(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaMeanAll":
		return protoreflect.ValueOfUint64(uint64(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdCleaned":
		return protoreflect.ValueOfUint64(uint64(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.etaStdAll":
		return protoreflect.ValueOfUint64(uint64(0))
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depport":
		return protoreflect.ValueOfString("")
	case "vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData.depportScore":
		return protoreflect.ValueOfInt32(int32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ConsolidatedDataReportPacketPacketData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Imo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Ts != 0 {
			n += 1 + runtime.Sov(uint64(x.Ts))
		}
		if x.TotalSamples != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalSamples))
		}
		if x.EtaOutliers != 0 {
			n += 1 + runtime.Sov(uint64(x.EtaOutliers))
		}
		if x.EtaMeanCleaned != 0 {
			n += 1 + runtime.Sov(uint64(x.EtaMeanCleaned))
		}
		if x.EtaMeanAll != 0 {
			n += 1 + runtime.Sov(uint64(x.EtaMeanAll))
		}
		if x.EtaStdCleaned != 0 {
			n += 1 + runtime.Sov(uint64(x.EtaStdCleaned))
		}
		if x.EtaStdAll != 0 {
			n += 1 + runtime.Sov(uint64(x.EtaStdAll))
		}
		l = len(x.Depport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DepportScore != 0 {
			n += 1 + runtime.Sov(uint64(x.DepportScore))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DepportScore != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DepportScore))
			i--
			dAtA[i] = 0x50
		}
		if len(x.Depport) > 0 {
			i -= len(x.Depport)
			copy(dAtA[i:], x.Depport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Depport)))
			i--
			dAtA[i] = 0x4a
		}
		if x.EtaStdAll != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EtaStdAll))
			i--
			dAtA[i] = 0x40
		}
		if x.EtaStdCleaned != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EtaStdCleaned))
			i--
			dAtA[i] = 0x38
		}
		if x.EtaMeanAll != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EtaMeanAll))
			i--
			dAtA[i] = 0x30
		}
		if x.EtaMeanCleaned != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EtaMeanCleaned))
			i--
			dAtA[i] = 0x28
		}
		if x.EtaOutliers != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EtaOutliers))
			i--
			dAtA[i] = 0x20
		}
		if x.TotalSamples != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalSamples))
			i--
			dAtA[i] = 0x18
		}
		if x.Ts != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Ts))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Imo) > 0 {
			i -= len(x.Imo)
			copy(dAtA[i:], x.Imo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Imo)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsolidatedDataReportPacketPacketData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsolidatedDataReportPacketPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Imo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
				}
				x.Ts = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Ts |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalSamples", wireType)
				}
				x.TotalSamples = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalSamples |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EtaOutliers", wireType)
				}
				x.EtaOutliers = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EtaOutliers |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EtaMeanCleaned", wireType)
				}
				x.EtaMeanCleaned = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EtaMeanCleaned |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EtaMeanAll", wireType)
				}
				x.EtaMeanAll = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EtaMeanAll |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EtaStdCleaned", wireType)
				}
				x.EtaStdCleaned = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EtaStdCleaned |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EtaStdAll", wireType)
				}
				x.EtaStdAll = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EtaStdAll |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Depport", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Depport = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DepportScore", wireType)
				}
				x.DepportScore = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DepportScore |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ConsolidatedDataReportPacketPacketAck protoreflect.MessageDescriptor
)

func init() {
	file_vesseloracle_vesseloracle_packet_proto_init()
	md_ConsolidatedDataReportPacketPacketAck = File_vesseloracle_vesseloracle_packet_proto.Messages().ByName("ConsolidatedDataReportPacketPacketAck")
}

var _ protoreflect.Message = (*fastReflection_ConsolidatedDataReportPacketPacketAck)(nil)

type fastReflection_ConsolidatedDataReportPacketPacketAck ConsolidatedDataReportPacketPacketAck

func (x *ConsolidatedDataReportPacketPacketAck) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ConsolidatedDataReportPacketPacketAck)(x)
}

func (x *ConsolidatedDataReportPacketPacketAck) slowProtoReflect() protoreflect.Message {
	mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ConsolidatedDataReportPacketPacketAck_messageType fastReflection_ConsolidatedDataReportPacketPacketAck_messageType
var _ protoreflect.MessageType = fastReflection_ConsolidatedDataReportPacketPacketAck_messageType{}

type fastReflection_ConsolidatedDataReportPacketPacketAck_messageType struct{}

func (x fastReflection_ConsolidatedDataReportPacketPacketAck_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ConsolidatedDataReportPacketPacketAck)(nil)
}
func (x fastReflection_ConsolidatedDataReportPacketPacketAck_messageType) New() protoreflect.Message {
	return new(fastReflection_ConsolidatedDataReportPacketPacketAck)
}
func (x fastReflection_ConsolidatedDataReportPacketPacketAck_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsolidatedDataReportPacketPacketAck
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsolidatedDataReportPacketPacketAck
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Type() protoreflect.MessageType {
	return _fastReflection_ConsolidatedDataReportPacketPacketAck_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) New() protoreflect.Message {
	return new(fastReflection_ConsolidatedDataReportPacketPacketAck)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Interface() protoreflect.ProtoMessage {
	return (*ConsolidatedDataReportPacketPacketAck)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck"))
		}
		panic(fmt.Errorf("message vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ConsolidatedDataReportPacketPacketAck) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketAck)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketAck)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ConsolidatedDataReportPacketPacketAck)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsolidatedDataReportPacketPacketAck: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsolidatedDataReportPacketPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: vesseloracle/vesseloracle/packet.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VesseloraclePacketData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Packet:
	//
	//	*VesseloraclePacketData_NoData
	//	*VesseloraclePacketData_ConsolidatedDataReportPacketPacket
	Packet isVesseloraclePacketData_Packet `protobuf_oneof:"packet"`
}

func (x *VesseloraclePacketData) Reset() {
	*x = VesseloraclePacketData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VesseloraclePacketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VesseloraclePacketData) ProtoMessage() {}

// Deprecated: Use VesseloraclePacketData.ProtoReflect.Descriptor instead.
func (*VesseloraclePacketData) Descriptor() ([]byte, []int) {
	return file_vesseloracle_vesseloracle_packet_proto_rawDescGZIP(), []int{0}
}

func (x *VesseloraclePacketData) GetPacket() isVesseloraclePacketData_Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *VesseloraclePacketData) GetNoData() *NoData {
	if x, ok := x.GetPacket().(*VesseloraclePacketData_NoData); ok {
		return x.NoData
	}
	return nil
}

func (x *VesseloraclePacketData) GetConsolidatedDataReportPacketPacket() *ConsolidatedDataReportPacketPacketData {
	if x, ok := x.GetPacket().(*VesseloraclePacketData_ConsolidatedDataReportPacketPacket); ok {
		return x.ConsolidatedDataReportPacketPacket
	}
	return nil
}

type isVesseloraclePacketData_Packet interface {
	isVesseloraclePacketData_Packet()
}

type VesseloraclePacketData_NoData struct {
	NoData *NoData `protobuf:"bytes,1,opt,name=noData,proto3,oneof"`
}

type VesseloraclePacketData_ConsolidatedDataReportPacketPacket struct {
	ConsolidatedDataReportPacketPacket *ConsolidatedDataReportPacketPacketData `protobuf:"bytes,2,opt,name=consolidatedDataReportPacketPacket,proto3,oneof"`
}

func (*VesseloraclePacketData_NoData) isVesseloraclePacketData_Packet() {}

func (*VesseloraclePacketData_ConsolidatedDataReportPacketPacket) isVesseloraclePacketData_Packet() {}

type NoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoData) Reset() {
	*x = NoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoData) ProtoMessage() {}

// Deprecated: Use NoData.ProtoReflect.Descriptor instead.
func (*NoData) Descriptor() ([]byte, []int) {
	return file_vesseloracle_vesseloracle_packet_proto_rawDescGZIP(), []int{1}
}

// ConsolidatedDataReportPacketPacketData defines a struct for the packet payload
type ConsolidatedDataReportPacketPacketData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imo            string `protobuf:"bytes,1,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts             uint64 `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	TotalSamples   int32  `protobuf:"varint,3,opt,name=totalSamples,proto3" json:"totalSamples,omitempty"`
	EtaOutliers    int32  `protobuf:"varint,4,opt,name=etaOutliers,proto3" json:"etaOutliers,omitempty"`
	EtaMeanCleaned uint64 `protobuf:"varint,5,opt,name=etaMeanCleaned,proto3" json:"etaMeanCleaned,omitempty"`
	EtaMeanAll     uint64 `protobuf:"varint,6,opt,name=etaMeanAll,proto3" json:"etaMeanAll,omitempty"`
	EtaStdCleaned  uint64 `protobuf:"varint,7,opt,name=etaStdCleaned,proto3" json:"etaStdCleaned,omitempty"`
	EtaStdAll      uint64 `protobuf:"varint,8,opt,name=etaStdAll,proto3" json:"etaStdAll,omitempty"`
	Depport        string `protobuf:"bytes,9,opt,name=depport,proto3" json:"depport,omitempty"`
	DepportScore   int32  `protobuf:"varint,10,opt,name=depportScore,proto3" json:"depportScore,omitempty"`
}

func (x *ConsolidatedDataReportPacketPacketData) Reset() {
	*x = ConsolidatedDataReportPacketPacketData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsolidatedDataReportPacketPacketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsolidatedDataReportPacketPacketData) ProtoMessage() {}

// Deprecated: Use ConsolidatedDataReportPacketPacketData.ProtoReflect.Descriptor instead.
func (*ConsolidatedDataReportPacketPacketData) Descriptor() ([]byte, []int) {
	return file_vesseloracle_vesseloracle_packet_proto_rawDescGZIP(), []int{2}
}

func (x *ConsolidatedDataReportPacketPacketData) GetImo() string {
	if x != nil {
		return x.Imo
	}
	return ""
}

func (x *ConsolidatedDataReportPacketPacketData) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetTotalSamples() int32 {
	if x != nil {
		return x.TotalSamples
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetEtaOutliers() int32 {
	if x != nil {
		return x.EtaOutliers
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetEtaMeanCleaned() uint64 {
	if x != nil {
		return x.EtaMeanCleaned
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetEtaMeanAll() uint64 {
	if x != nil {
		return x.EtaMeanAll
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetEtaStdCleaned() uint64 {
	if x != nil {
		return x.EtaStdCleaned
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetEtaStdAll() uint64 {
	if x != nil {
		return x.EtaStdAll
	}
	return 0
}

func (x *ConsolidatedDataReportPacketPacketData) GetDepport() string {
	if x != nil {
		return x.Depport
	}
	return ""
}

func (x *ConsolidatedDataReportPacketPacketData) GetDepportScore() int32 {
	if x != nil {
		return x.DepportScore
	}
	return 0
}

// ConsolidatedDataReportPacketPacketAck defines a struct for the packet acknowledgment
type ConsolidatedDataReportPacketPacketAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConsolidatedDataReportPacketPacketAck) Reset() {
	*x = ConsolidatedDataReportPacketPacketAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vesseloracle_vesseloracle_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsolidatedDataReportPacketPacketAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsolidatedDataReportPacketPacketAck) ProtoMessage() {}

// Deprecated: Use ConsolidatedDataReportPacketPacketAck.ProtoReflect.Descriptor instead.
func (*ConsolidatedDataReportPacketPacketAck) Descriptor() ([]byte, []int) {
	return file_vesseloracle_vesseloracle_packet_proto_rawDescGZIP(), []int{3}
}

var File_vesseloracle_vesseloracle_packet_proto protoreflect.FileDescriptor

var file_vesseloracle_vesseloracle_packet_proto_rawDesc = []byte{
	0x0a, 0x26, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x76,
	0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x16, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b,
	0x0a, 0x06, 0x6e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x65,
	0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x93, 0x01, 0x0a, 0x22,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x76, 0x65, 0x73, 0x73, 0x65,
	0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x22, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x08, 0x0a, 0x06, 0x4e,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0xda, 0x02, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x74, 0x61, 0x4f, 0x75, 0x74,
	0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x74, 0x61,
	0x4f, 0x75, 0x74, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x74, 0x61, 0x4d,
	0x65, 0x61, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x61, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x74, 0x61, 0x4d, 0x65, 0x61, 0x6e, 0x41, 0x6c, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x64, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x74, 0x61, 0x53, 0x74, 0x64,
	0x41, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x74, 0x61, 0x53, 0x74,
	0x64, 0x41, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x42, 0xdd, 0x01, 0x0a, 0x1d,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x42, 0x0b, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x76, 0x65,
	0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x65, 0x73, 0x73,
	0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xa2, 0x02, 0x03, 0x56, 0x56, 0x58, 0xaa, 0x02,
	0x19, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x65,
	0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xca, 0x02, 0x19, 0x56, 0x65, 0x73,
	0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0xe2, 0x02, 0x25, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x1a, 0x56, 0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x3a, 0x3a, 0x56,
	0x65, 0x73, 0x73, 0x65, 0x6c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_vesseloracle_vesseloracle_packet_proto_rawDescOnce sync.Once
	file_vesseloracle_vesseloracle_packet_proto_rawDescData = file_vesseloracle_vesseloracle_packet_proto_rawDesc
)

func file_vesseloracle_vesseloracle_packet_proto_rawDescGZIP() []byte {
	file_vesseloracle_vesseloracle_packet_proto_rawDescOnce.Do(func() {
		file_vesseloracle_vesseloracle_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_vesseloracle_vesseloracle_packet_proto_rawDescData)
	})
	return file_vesseloracle_vesseloracle_packet_proto_rawDescData
}

var file_vesseloracle_vesseloracle_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_vesseloracle_vesseloracle_packet_proto_goTypes = []interface{}{
	(*VesseloraclePacketData)(nil),                 // 0: vesseloracle.vesseloracle.VesseloraclePacketData
	(*NoData)(nil),                                 // 1: vesseloracle.vesseloracle.NoData
	(*ConsolidatedDataReportPacketPacketData)(nil), // 2: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData
	(*ConsolidatedDataReportPacketPacketAck)(nil),  // 3: vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketAck
}
var file_vesseloracle_vesseloracle_packet_proto_depIdxs = []int32{
	1, // 0: vesseloracle.vesseloracle.VesseloraclePacketData.noData:type_name -> vesseloracle.vesseloracle.NoData
	2, // 1: vesseloracle.vesseloracle.VesseloraclePacketData.consolidatedDataReportPacketPacket:type_name -> vesseloracle.vesseloracle.ConsolidatedDataReportPacketPacketData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_vesseloracle_vesseloracle_packet_proto_init() }
func file_vesseloracle_vesseloracle_packet_proto_init() {
	if File_vesseloracle_vesseloracle_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vesseloracle_vesseloracle_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VesseloraclePacketData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesseloracle_vesseloracle_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesseloracle_vesseloracle_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsolidatedDataReportPacketPacketData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vesseloracle_vesseloracle_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsolidatedDataReportPacketPacketAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vesseloracle_vesseloracle_packet_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*VesseloraclePacketData_NoData)(nil),
		(*VesseloraclePacketData_ConsolidatedDataReportPacketPacket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vesseloracle_vesseloracle_packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vesseloracle_vesseloracle_packet_proto_goTypes,
		DependencyIndexes: file_vesseloracle_vesseloracle_packet_proto_depIdxs,
		MessageInfos:      file_vesseloracle_vesseloracle_packet_proto_msgTypes,
	}.Build()
	File_vesseloracle_vesseloracle_packet_proto = out.File
	file_vesseloracle_vesseloracle_packet_proto_rawDesc = nil
	file_vesseloracle_vesseloracle_packet_proto_goTypes = nil
	file_vesseloracle_vesseloracle_packet_proto_depIdxs = nil
}
