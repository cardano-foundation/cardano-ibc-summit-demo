// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vesseloracle/vesseloracle/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateVessel struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo      string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts       uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Source   string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Lat      int32  `protobuf:"varint,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon      int32  `protobuf:"varint,6,opt,name=lon,proto3" json:"lon,omitempty"`
	Speed    int32  `protobuf:"varint,7,opt,name=speed,proto3" json:"speed,omitempty"`
	Course   int32  `protobuf:"varint,8,opt,name=course,proto3" json:"course,omitempty"`
	Heading  int32  `protobuf:"varint,9,opt,name=heading,proto3" json:"heading,omitempty"`
	Adt      uint64 `protobuf:"varint,10,opt,name=adt,proto3" json:"adt,omitempty"`
	Eta      uint64 `protobuf:"varint,11,opt,name=eta,proto3" json:"eta,omitempty"`
	Name     string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Destport string `protobuf:"bytes,13,opt,name=destport,proto3" json:"destport,omitempty"`
	Depport  string `protobuf:"bytes,14,opt,name=depport,proto3" json:"depport,omitempty"`
	Mmsi     string `protobuf:"bytes,15,opt,name=mmsi,proto3" json:"mmsi,omitempty"`
}

func (m *MsgCreateVessel) Reset()         { *m = MsgCreateVessel{} }
func (m *MsgCreateVessel) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVessel) ProtoMessage()    {}
func (*MsgCreateVessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{2}
}
func (m *MsgCreateVessel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVessel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVessel.Merge(m, src)
}
func (m *MsgCreateVessel) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVessel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVessel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVessel proto.InternalMessageInfo

func (m *MsgCreateVessel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateVessel) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgCreateVessel) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *MsgCreateVessel) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *MsgCreateVessel) GetLat() int32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *MsgCreateVessel) GetLon() int32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *MsgCreateVessel) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *MsgCreateVessel) GetCourse() int32 {
	if m != nil {
		return m.Course
	}
	return 0
}

func (m *MsgCreateVessel) GetHeading() int32 {
	if m != nil {
		return m.Heading
	}
	return 0
}

func (m *MsgCreateVessel) GetAdt() uint64 {
	if m != nil {
		return m.Adt
	}
	return 0
}

func (m *MsgCreateVessel) GetEta() uint64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *MsgCreateVessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateVessel) GetDestport() string {
	if m != nil {
		return m.Destport
	}
	return ""
}

func (m *MsgCreateVessel) GetDepport() string {
	if m != nil {
		return m.Depport
	}
	return ""
}

func (m *MsgCreateVessel) GetMmsi() string {
	if m != nil {
		return m.Mmsi
	}
	return ""
}

type MsgCreateVesselResponse struct {
}

func (m *MsgCreateVesselResponse) Reset()         { *m = MsgCreateVesselResponse{} }
func (m *MsgCreateVesselResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateVesselResponse) ProtoMessage()    {}
func (*MsgCreateVesselResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{3}
}
func (m *MsgCreateVesselResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateVesselResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateVesselResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateVesselResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateVesselResponse.Merge(m, src)
}
func (m *MsgCreateVesselResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateVesselResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateVesselResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateVesselResponse proto.InternalMessageInfo

type MsgUpdateVessel struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo      string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts       uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Source   string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Lat      int32  `protobuf:"varint,5,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon      int32  `protobuf:"varint,6,opt,name=lon,proto3" json:"lon,omitempty"`
	Speed    int32  `protobuf:"varint,7,opt,name=speed,proto3" json:"speed,omitempty"`
	Course   int32  `protobuf:"varint,8,opt,name=course,proto3" json:"course,omitempty"`
	Heading  int32  `protobuf:"varint,9,opt,name=heading,proto3" json:"heading,omitempty"`
	Adt      uint64 `protobuf:"varint,10,opt,name=adt,proto3" json:"adt,omitempty"`
	Eta      uint64 `protobuf:"varint,11,opt,name=eta,proto3" json:"eta,omitempty"`
	Name     string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Destport string `protobuf:"bytes,13,opt,name=destport,proto3" json:"destport,omitempty"`
	Depport  string `protobuf:"bytes,14,opt,name=depport,proto3" json:"depport,omitempty"`
	Mmsi     string `protobuf:"bytes,15,opt,name=mmsi,proto3" json:"mmsi,omitempty"`
}

func (m *MsgUpdateVessel) Reset()         { *m = MsgUpdateVessel{} }
func (m *MsgUpdateVessel) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateVessel) ProtoMessage()    {}
func (*MsgUpdateVessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{4}
}
func (m *MsgUpdateVessel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVessel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVessel.Merge(m, src)
}
func (m *MsgUpdateVessel) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVessel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVessel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVessel proto.InternalMessageInfo

func (m *MsgUpdateVessel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateVessel) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgUpdateVessel) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *MsgUpdateVessel) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *MsgUpdateVessel) GetLat() int32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *MsgUpdateVessel) GetLon() int32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *MsgUpdateVessel) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *MsgUpdateVessel) GetCourse() int32 {
	if m != nil {
		return m.Course
	}
	return 0
}

func (m *MsgUpdateVessel) GetHeading() int32 {
	if m != nil {
		return m.Heading
	}
	return 0
}

func (m *MsgUpdateVessel) GetAdt() uint64 {
	if m != nil {
		return m.Adt
	}
	return 0
}

func (m *MsgUpdateVessel) GetEta() uint64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *MsgUpdateVessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateVessel) GetDestport() string {
	if m != nil {
		return m.Destport
	}
	return ""
}

func (m *MsgUpdateVessel) GetDepport() string {
	if m != nil {
		return m.Depport
	}
	return ""
}

func (m *MsgUpdateVessel) GetMmsi() string {
	if m != nil {
		return m.Mmsi
	}
	return ""
}

type MsgUpdateVesselResponse struct {
}

func (m *MsgUpdateVesselResponse) Reset()         { *m = MsgUpdateVesselResponse{} }
func (m *MsgUpdateVesselResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateVesselResponse) ProtoMessage()    {}
func (*MsgUpdateVesselResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{5}
}
func (m *MsgUpdateVesselResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateVesselResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateVesselResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateVesselResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateVesselResponse.Merge(m, src)
}
func (m *MsgUpdateVesselResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateVesselResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateVesselResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateVesselResponse proto.InternalMessageInfo

type MsgDeleteVessel struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo     string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts      uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Source  string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
}

func (m *MsgDeleteVessel) Reset()         { *m = MsgDeleteVessel{} }
func (m *MsgDeleteVessel) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVessel) ProtoMessage()    {}
func (*MsgDeleteVessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{6}
}
func (m *MsgDeleteVessel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVessel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVessel.Merge(m, src)
}
func (m *MsgDeleteVessel) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVessel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVessel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVessel proto.InternalMessageInfo

func (m *MsgDeleteVessel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteVessel) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgDeleteVessel) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *MsgDeleteVessel) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type MsgDeleteVesselResponse struct {
}

func (m *MsgDeleteVesselResponse) Reset()         { *m = MsgDeleteVesselResponse{} }
func (m *MsgDeleteVesselResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteVesselResponse) ProtoMessage()    {}
func (*MsgDeleteVesselResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{7}
}
func (m *MsgDeleteVesselResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteVesselResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteVesselResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteVesselResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteVesselResponse.Merge(m, src)
}
func (m *MsgDeleteVesselResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteVesselResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteVesselResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteVesselResponse proto.InternalMessageInfo

type MsgConsolidateReports struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo     string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
}

func (m *MsgConsolidateReports) Reset()         { *m = MsgConsolidateReports{} }
func (m *MsgConsolidateReports) String() string { return proto.CompactTextString(m) }
func (*MsgConsolidateReports) ProtoMessage()    {}
func (*MsgConsolidateReports) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{8}
}
func (m *MsgConsolidateReports) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConsolidateReports) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConsolidateReports.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConsolidateReports) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConsolidateReports.Merge(m, src)
}
func (m *MsgConsolidateReports) XXX_Size() int {
	return m.Size()
}
func (m *MsgConsolidateReports) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConsolidateReports.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConsolidateReports proto.InternalMessageInfo

func (m *MsgConsolidateReports) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgConsolidateReports) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

type MsgConsolidateReportsResponse struct {
	Imo string `protobuf:"bytes,1,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts  uint64 `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (m *MsgConsolidateReportsResponse) Reset()         { *m = MsgConsolidateReportsResponse{} }
func (m *MsgConsolidateReportsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgConsolidateReportsResponse) ProtoMessage()    {}
func (*MsgConsolidateReportsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{9}
}
func (m *MsgConsolidateReportsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConsolidateReportsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConsolidateReportsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConsolidateReportsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConsolidateReportsResponse.Merge(m, src)
}
func (m *MsgConsolidateReportsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgConsolidateReportsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConsolidateReportsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConsolidateReportsResponse proto.InternalMessageInfo

func (m *MsgConsolidateReportsResponse) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgConsolidateReportsResponse) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type MsgCreateConsolidatedDataReport struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo            string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts             uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	TotalSamples   int32  `protobuf:"varint,4,opt,name=totalSamples,proto3" json:"totalSamples,omitempty"`
	EtaOutliers    int32  `protobuf:"varint,5,opt,name=etaOutliers,proto3" json:"etaOutliers,omitempty"`
	EtaMeanCleaned uint64 `protobuf:"varint,6,opt,name=etaMeanCleaned,proto3" json:"etaMeanCleaned,omitempty"`
	EtaMeanAll     uint64 `protobuf:"varint,7,opt,name=etaMeanAll,proto3" json:"etaMeanAll,omitempty"`
	EtaStdCleaned  uint64 `protobuf:"varint,8,opt,name=etaStdCleaned,proto3" json:"etaStdCleaned,omitempty"`
	EtaStdAll      uint64 `protobuf:"varint,9,opt,name=etaStdAll,proto3" json:"etaStdAll,omitempty"`
	DepportScore   int32  `protobuf:"varint,10,opt,name=depportScore,proto3" json:"depportScore,omitempty"`
	Depport        string `protobuf:"bytes,11,opt,name=depport,proto3" json:"depport,omitempty"`
}

func (m *MsgCreateConsolidatedDataReport) Reset()         { *m = MsgCreateConsolidatedDataReport{} }
func (m *MsgCreateConsolidatedDataReport) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConsolidatedDataReport) ProtoMessage()    {}
func (*MsgCreateConsolidatedDataReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{10}
}
func (m *MsgCreateConsolidatedDataReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConsolidatedDataReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConsolidatedDataReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConsolidatedDataReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConsolidatedDataReport.Merge(m, src)
}
func (m *MsgCreateConsolidatedDataReport) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConsolidatedDataReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConsolidatedDataReport.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConsolidatedDataReport proto.InternalMessageInfo

func (m *MsgCreateConsolidatedDataReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateConsolidatedDataReport) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgCreateConsolidatedDataReport) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetTotalSamples() int32 {
	if m != nil {
		return m.TotalSamples
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetEtaOutliers() int32 {
	if m != nil {
		return m.EtaOutliers
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetEtaMeanCleaned() uint64 {
	if m != nil {
		return m.EtaMeanCleaned
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetEtaMeanAll() uint64 {
	if m != nil {
		return m.EtaMeanAll
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetEtaStdCleaned() uint64 {
	if m != nil {
		return m.EtaStdCleaned
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetEtaStdAll() uint64 {
	if m != nil {
		return m.EtaStdAll
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetDepportScore() int32 {
	if m != nil {
		return m.DepportScore
	}
	return 0
}

func (m *MsgCreateConsolidatedDataReport) GetDepport() string {
	if m != nil {
		return m.Depport
	}
	return ""
}

type MsgCreateConsolidatedDataReportResponse struct {
}

func (m *MsgCreateConsolidatedDataReportResponse) Reset() {
	*m = MsgCreateConsolidatedDataReportResponse{}
}
func (m *MsgCreateConsolidatedDataReportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConsolidatedDataReportResponse) ProtoMessage()    {}
func (*MsgCreateConsolidatedDataReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{11}
}
func (m *MsgCreateConsolidatedDataReportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConsolidatedDataReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConsolidatedDataReportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConsolidatedDataReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConsolidatedDataReportResponse.Merge(m, src)
}
func (m *MsgCreateConsolidatedDataReportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConsolidatedDataReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConsolidatedDataReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConsolidatedDataReportResponse proto.InternalMessageInfo

type MsgUpdateConsolidatedDataReport struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo            string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts             uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	TotalSamples   int32  `protobuf:"varint,4,opt,name=totalSamples,proto3" json:"totalSamples,omitempty"`
	EtaOutliers    int32  `protobuf:"varint,5,opt,name=etaOutliers,proto3" json:"etaOutliers,omitempty"`
	EtaMeanCleaned uint64 `protobuf:"varint,6,opt,name=etaMeanCleaned,proto3" json:"etaMeanCleaned,omitempty"`
	EtaMeanAll     uint64 `protobuf:"varint,7,opt,name=etaMeanAll,proto3" json:"etaMeanAll,omitempty"`
	EtaStdCleaned  uint64 `protobuf:"varint,8,opt,name=etaStdCleaned,proto3" json:"etaStdCleaned,omitempty"`
	EtaStdAll      uint64 `protobuf:"varint,9,opt,name=etaStdAll,proto3" json:"etaStdAll,omitempty"`
	DepportScore   int32  `protobuf:"varint,10,opt,name=depportScore,proto3" json:"depportScore,omitempty"`
	Depport        string `protobuf:"bytes,11,opt,name=depport,proto3" json:"depport,omitempty"`
}

func (m *MsgUpdateConsolidatedDataReport) Reset()         { *m = MsgUpdateConsolidatedDataReport{} }
func (m *MsgUpdateConsolidatedDataReport) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateConsolidatedDataReport) ProtoMessage()    {}
func (*MsgUpdateConsolidatedDataReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{12}
}
func (m *MsgUpdateConsolidatedDataReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateConsolidatedDataReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateConsolidatedDataReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateConsolidatedDataReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateConsolidatedDataReport.Merge(m, src)
}
func (m *MsgUpdateConsolidatedDataReport) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateConsolidatedDataReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateConsolidatedDataReport.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateConsolidatedDataReport proto.InternalMessageInfo

func (m *MsgUpdateConsolidatedDataReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateConsolidatedDataReport) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgUpdateConsolidatedDataReport) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetTotalSamples() int32 {
	if m != nil {
		return m.TotalSamples
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetEtaOutliers() int32 {
	if m != nil {
		return m.EtaOutliers
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetEtaMeanCleaned() uint64 {
	if m != nil {
		return m.EtaMeanCleaned
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetEtaMeanAll() uint64 {
	if m != nil {
		return m.EtaMeanAll
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetEtaStdCleaned() uint64 {
	if m != nil {
		return m.EtaStdCleaned
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetEtaStdAll() uint64 {
	if m != nil {
		return m.EtaStdAll
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetDepportScore() int32 {
	if m != nil {
		return m.DepportScore
	}
	return 0
}

func (m *MsgUpdateConsolidatedDataReport) GetDepport() string {
	if m != nil {
		return m.Depport
	}
	return ""
}

type MsgUpdateConsolidatedDataReportResponse struct {
}

func (m *MsgUpdateConsolidatedDataReportResponse) Reset() {
	*m = MsgUpdateConsolidatedDataReportResponse{}
}
func (m *MsgUpdateConsolidatedDataReportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateConsolidatedDataReportResponse) ProtoMessage()    {}
func (*MsgUpdateConsolidatedDataReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{13}
}
func (m *MsgUpdateConsolidatedDataReportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateConsolidatedDataReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateConsolidatedDataReportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateConsolidatedDataReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateConsolidatedDataReportResponse.Merge(m, src)
}
func (m *MsgUpdateConsolidatedDataReportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateConsolidatedDataReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateConsolidatedDataReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateConsolidatedDataReportResponse proto.InternalMessageInfo

type MsgDeleteConsolidatedDataReport struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Imo     string `protobuf:"bytes,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Ts      uint64 `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (m *MsgDeleteConsolidatedDataReport) Reset()         { *m = MsgDeleteConsolidatedDataReport{} }
func (m *MsgDeleteConsolidatedDataReport) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteConsolidatedDataReport) ProtoMessage()    {}
func (*MsgDeleteConsolidatedDataReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{14}
}
func (m *MsgDeleteConsolidatedDataReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteConsolidatedDataReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteConsolidatedDataReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteConsolidatedDataReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteConsolidatedDataReport.Merge(m, src)
}
func (m *MsgDeleteConsolidatedDataReport) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteConsolidatedDataReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteConsolidatedDataReport.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteConsolidatedDataReport proto.InternalMessageInfo

func (m *MsgDeleteConsolidatedDataReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteConsolidatedDataReport) GetImo() string {
	if m != nil {
		return m.Imo
	}
	return ""
}

func (m *MsgDeleteConsolidatedDataReport) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type MsgDeleteConsolidatedDataReportResponse struct {
}

func (m *MsgDeleteConsolidatedDataReportResponse) Reset() {
	*m = MsgDeleteConsolidatedDataReportResponse{}
}
func (m *MsgDeleteConsolidatedDataReportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteConsolidatedDataReportResponse) ProtoMessage()    {}
func (*MsgDeleteConsolidatedDataReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a2d3a975feaee1, []int{15}
}
func (m *MsgDeleteConsolidatedDataReportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteConsolidatedDataReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteConsolidatedDataReportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteConsolidatedDataReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteConsolidatedDataReportResponse.Merge(m, src)
}
func (m *MsgDeleteConsolidatedDataReportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteConsolidatedDataReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteConsolidatedDataReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteConsolidatedDataReportResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "vesseloracle.vesseloracle.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "vesseloracle.vesseloracle.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateVessel)(nil), "vesseloracle.vesseloracle.MsgCreateVessel")
	proto.RegisterType((*MsgCreateVesselResponse)(nil), "vesseloracle.vesseloracle.MsgCreateVesselResponse")
	proto.RegisterType((*MsgUpdateVessel)(nil), "vesseloracle.vesseloracle.MsgUpdateVessel")
	proto.RegisterType((*MsgUpdateVesselResponse)(nil), "vesseloracle.vesseloracle.MsgUpdateVesselResponse")
	proto.RegisterType((*MsgDeleteVessel)(nil), "vesseloracle.vesseloracle.MsgDeleteVessel")
	proto.RegisterType((*MsgDeleteVesselResponse)(nil), "vesseloracle.vesseloracle.MsgDeleteVesselResponse")
	proto.RegisterType((*MsgConsolidateReports)(nil), "vesseloracle.vesseloracle.MsgConsolidateReports")
	proto.RegisterType((*MsgConsolidateReportsResponse)(nil), "vesseloracle.vesseloracle.MsgConsolidateReportsResponse")
	proto.RegisterType((*MsgCreateConsolidatedDataReport)(nil), "vesseloracle.vesseloracle.MsgCreateConsolidatedDataReport")
	proto.RegisterType((*MsgCreateConsolidatedDataReportResponse)(nil), "vesseloracle.vesseloracle.MsgCreateConsolidatedDataReportResponse")
	proto.RegisterType((*MsgUpdateConsolidatedDataReport)(nil), "vesseloracle.vesseloracle.MsgUpdateConsolidatedDataReport")
	proto.RegisterType((*MsgUpdateConsolidatedDataReportResponse)(nil), "vesseloracle.vesseloracle.MsgUpdateConsolidatedDataReportResponse")
	proto.RegisterType((*MsgDeleteConsolidatedDataReport)(nil), "vesseloracle.vesseloracle.MsgDeleteConsolidatedDataReport")
	proto.RegisterType((*MsgDeleteConsolidatedDataReportResponse)(nil), "vesseloracle.vesseloracle.MsgDeleteConsolidatedDataReportResponse")
}

func init() {
	proto.RegisterFile("vesseloracle/vesseloracle/tx.proto", fileDescriptor_51a2d3a975feaee1)
}

var fileDescriptor_51a2d3a975feaee1 = []byte{
	// 897 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x8f, 0xd3, 0x24, 0x9b, 0x4c, 0xb2, 0x5d, 0x18, 0x15, 0x76, 0x1a, 0x2d, 0xd9, 0x6c, 0x84,
	0x96, 0x10, 0x44, 0x02, 0x45, 0x42, 0xab, 0x20, 0x21, 0x35, 0xed, 0xb5, 0x02, 0x1c, 0xc1, 0x81,
	0x4b, 0x35, 0xc4, 0x4f, 0xa9, 0x85, 0xed, 0xb1, 0x3c, 0x93, 0xaa, 0xbd, 0x55, 0x1c, 0x39, 0xf1,
	0x09, 0x38, 0x73, 0xac, 0x10, 0x1f, 0xa2, 0x37, 0x2a, 0x4e, 0x9c, 0x10, 0xb4, 0x87, 0x7e, 0x08,
	0x2e, 0x68, 0x66, 0x6c, 0xc7, 0x76, 0xd3, 0xc4, 0x2d, 0x54, 0x5c, 0x7a, 0x69, 0xe7, 0xfd, 0xe6,
	0xcd, 0xfb, 0xf3, 0x7b, 0x2f, 0x6f, 0xc6, 0xa8, 0x73, 0x08, 0x9c, 0x83, 0xc3, 0x02, 0x3a, 0x71,
	0x60, 0x90, 0x12, 0xc4, 0x51, 0xdf, 0x0f, 0x98, 0x60, 0x78, 0x33, 0x09, 0xf7, 0x93, 0x42, 0xf3,
	0x75, 0xea, 0xda, 0x1e, 0x1b, 0xa8, 0xbf, 0x5a, 0xbb, 0xf9, 0x74, 0xc2, 0xb8, 0xcb, 0xf8, 0xc0,
	0xe5, 0xd3, 0xc1, 0xe1, 0x87, 0xf2, 0x5f, 0xb8, 0xb1, 0xa9, 0x37, 0xf6, 0x95, 0x34, 0xd0, 0x42,
	0xb8, 0xb5, 0x31, 0x65, 0x53, 0xa6, 0x71, 0xb9, 0x0a, 0xd1, 0x97, 0x37, 0xc7, 0xe6, 0xd3, 0x80,
	0xba, 0x7c, 0xb5, 0x9e, 0x16, 0x42, 0xbd, 0x57, 0x37, 0xeb, 0x4d, 0x98, 0xc7, 0x99, 0x63, 0x5b,
	0x54, 0x80, 0xb5, 0x6f, 0x51, 0x41, 0xf7, 0x03, 0xf0, 0x59, 0x20, 0xf4, 0xc9, 0xce, 0xaf, 0x06,
	0x7a, 0xb2, 0xc7, 0xa7, 0x5f, 0xfa, 0x52, 0xe1, 0x73, 0xe5, 0x1b, 0x7f, 0x8c, 0x6a, 0x74, 0x26,
	0x0e, 0x58, 0x60, 0x8b, 0x63, 0x62, 0xb4, 0x8d, 0x6e, 0x6d, 0x44, 0x7e, 0xfb, 0xe5, 0xfd, 0x8d,
	0x30, 0xb1, 0x6d, 0xcb, 0x0a, 0x80, 0xf3, 0xb1, 0x08, 0x6c, 0x6f, 0x6a, 0xce, 0x55, 0xf1, 0x2e,
	0xaa, 0xe8, 0xe8, 0x49, 0xb1, 0x6d, 0x74, 0xeb, 0x5b, 0x2f, 0xfa, 0x37, 0xd2, 0xdb, 0xd7, 0xae,
	0x46, 0xb5, 0xb3, 0x3f, 0x9e, 0x17, 0x7e, 0xba, 0x3a, 0xed, 0x19, 0x66, 0x78, 0x76, 0xf8, 0xe9,
	0x77, 0x57, 0xa7, 0xbd, 0xb9, 0xd5, 0xef, 0xaf, 0x4e, 0x7b, 0xef, 0xa5, 0x32, 0x3a, 0x4a, 0x27,
	0x98, 0x89, 0xbe, 0xb3, 0x89, 0x9e, 0x66, 0x20, 0x13, 0xb8, 0xcf, 0x3c, 0x0e, 0x9d, 0xbf, 0x8a,
	0x2a, 0xd9, 0x9d, 0x00, 0xa8, 0x80, 0xaf, 0x94, 0x11, 0x4c, 0xd0, 0xa3, 0x89, 0x94, 0x59, 0xa0,
	0x53, 0x35, 0x23, 0x11, 0xbf, 0x86, 0xd6, 0x6c, 0x97, 0xa9, 0x5c, 0x6a, 0xa6, 0x5c, 0xe2, 0x75,
	0x54, 0x14, 0x9c, 0xac, 0xb5, 0x8d, 0x6e, 0xc9, 0x2c, 0x0a, 0x8e, 0xdf, 0x44, 0x15, 0xce, 0x66,
	0xc1, 0x04, 0x48, 0x49, 0x29, 0x85, 0x92, 0x3c, 0xe9, 0x50, 0x41, 0xca, 0x6d, 0xa3, 0x5b, 0x36,
	0xe5, 0x52, 0x21, 0xcc, 0x23, 0x95, 0x10, 0x61, 0x1e, 0xde, 0x40, 0x65, 0xee, 0x03, 0x58, 0xe4,
	0x91, 0xc2, 0xb4, 0x20, 0x2d, 0x4e, 0xd8, 0x2c, 0xe0, 0x40, 0xaa, 0x0a, 0x0e, 0x25, 0x19, 0xe5,
	0x01, 0x50, 0xcb, 0xf6, 0xa6, 0xa4, 0xa6, 0x36, 0x22, 0x51, 0x5a, 0xa6, 0x96, 0x20, 0x48, 0x05,
	0x25, 0x97, 0x12, 0x01, 0x41, 0x49, 0x5d, 0x23, 0x20, 0x28, 0xc6, 0xa8, 0xe4, 0x51, 0x17, 0x48,
	0x43, 0x45, 0xa9, 0xd6, 0xb8, 0x89, 0xaa, 0x16, 0x70, 0x21, 0x5b, 0x81, 0x3c, 0x56, 0x78, 0x2c,
	0x4b, 0x6f, 0x16, 0xf8, 0x6a, 0x6b, 0x5d, 0x73, 0x12, 0x8a, 0xd2, 0x92, 0xeb, 0x72, 0x9b, 0x3c,
	0xd1, 0x96, 0xe4, 0x7a, 0xd8, 0x90, 0x05, 0x8b, 0x58, 0x0b, 0xe9, 0x4f, 0x52, 0x9c, 0xa5, 0x5f,
	0x97, 0xe6, 0x81, 0xfe, 0x7b, 0xa4, 0x3f, 0x49, 0x71, 0x4c, 0x3f, 0x57, 0xec, 0xef, 0x82, 0x03,
	0xf7, 0xc9, 0xfe, 0xc2, 0x78, 0x92, 0x4e, 0xe3, 0x78, 0xbe, 0x40, 0x6f, 0xc8, 0x4e, 0x99, 0xcf,
	0x27, 0x53, 0x0d, 0x26, 0x7e, 0x9b, 0xa8, 0x32, 0xde, 0xb6, 0xd1, 0x5b, 0x0b, 0x4d, 0x46, 0x3e,
	0x23, 0x03, 0x46, 0x36, 0xad, 0x62, 0x94, 0x56, 0xe7, 0xef, 0x22, 0x7a, 0x1e, 0x37, 0x70, 0xc2,
	0x92, 0xb5, 0x4b, 0x05, 0xd5, 0xe6, 0xfe, 0x15, 0x6d, 0x1d, 0xd4, 0x10, 0x4c, 0x50, 0x67, 0x4c,
	0x5d, 0xdf, 0x01, 0xae, 0xc8, 0x2b, 0x9b, 0x29, 0x0c, 0xb7, 0x51, 0x1d, 0x04, 0xfd, 0x6c, 0x26,
	0x1c, 0x1b, 0x02, 0x1e, 0x36, 0x72, 0x12, 0xc2, 0x2f, 0xd1, 0x3a, 0x08, 0xba, 0x07, 0xd4, 0xdb,
	0x71, 0x80, 0x7a, 0x60, 0xa9, 0xde, 0x2e, 0x99, 0x19, 0x14, 0xb7, 0x10, 0x0a, 0x91, 0x6d, 0xc7,
	0x51, 0xbd, 0x5e, 0x32, 0x13, 0x08, 0x7e, 0x1b, 0x3d, 0x06, 0x41, 0xc7, 0xc2, 0x8a, 0xcc, 0x54,
	0x95, 0x4a, 0x1a, 0xc4, 0xcf, 0x50, 0x4d, 0x03, 0xd2, 0x48, 0x4d, 0x69, 0xcc, 0x01, 0x99, 0x51,
	0xd8, 0x9f, 0xe3, 0x09, 0x0b, 0x40, 0xfd, 0x16, 0xca, 0x66, 0x0a, 0x4b, 0xb6, 0x74, 0x3d, 0xd5,
	0xd2, 0x99, 0x02, 0xbe, 0x8b, 0xde, 0x59, 0x41, 0x7e, 0xdc, 0x3e, 0x61, 0xa1, 0x74, 0xab, 0x3f,
	0x14, 0xea, 0x7f, 0x29, 0xd4, 0x32, 0xf2, 0xe3, 0x42, 0x7d, 0xab, 0xea, 0xa4, 0x47, 0xc0, 0x7f,
	0x5f, 0xa7, 0x85, 0x71, 0x2d, 0x73, 0x16, 0xc5, 0xb5, 0xf5, 0x73, 0x15, 0xad, 0xed, 0xf1, 0x29,
	0xf6, 0x50, 0x23, 0xf5, 0xfc, 0xe9, 0x2d, 0x79, 0xb6, 0x64, 0x5e, 0x16, 0xcd, 0xad, 0xfc, 0xba,
	0xf1, 0x0c, 0xf2, 0x50, 0x23, 0xf5, 0x02, 0x59, 0xe1, 0x2f, 0xa9, 0xbb, 0xca, 0xdf, 0xa2, 0x6b,
	0x77, 0x9e, 0x5f, 0x3e, 0x7f, 0x49, 0xdd, 0x7c, 0xf9, 0x5d, 0xf7, 0x97, 0xba, 0x64, 0x56, 0xf8,
	0x4b, 0xea, 0xae, 0xf2, 0xb7, 0xe8, 0x1e, 0xc1, 0x27, 0x06, 0xc2, 0x0b, 0x6e, 0x91, 0x0f, 0x56,
	0x50, 0x75, 0xed, 0x44, 0xf3, 0xd5, 0x6d, 0x4f, 0xc4, 0x21, 0xfc, 0x68, 0xa0, 0x67, 0x4b, 0x6f,
	0x8c, 0x61, 0x9e, 0xba, 0x2d, 0x3e, 0xdb, 0x1c, 0xdd, 0xfd, 0x6c, 0x2a, 0xc0, 0xa5, 0x93, 0x72,
	0x98, 0xa7, 0xd0, 0x77, 0x0b, 0x30, 0xcf, 0x90, 0x50, 0x01, 0x2e, 0x1d, 0x11, 0xc3, 0x3c, 0x9d,
	0x71, 0xb7, 0x00, 0xf3, 0x4c, 0x8b, 0x66, 0xf9, 0x44, 0x7e, 0xa5, 0x8c, 0x3e, 0x39, 0xbb, 0x68,
	0x19, 0xe7, 0x17, 0x2d, 0xe3, 0xcf, 0x8b, 0x96, 0xf1, 0xc3, 0x65, 0xab, 0x70, 0x7e, 0xd9, 0x2a,
	0xfc, 0x7e, 0xd9, 0x2a, 0x7c, 0xfd, 0x62, 0xd9, 0x47, 0x8a, 0x38, 0xf6, 0x81, 0x7f, 0x53, 0x51,
	0xdf, 0x5c, 0x1f, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x14, 0x24, 0xb9, 0xbc, 0x9b, 0x0e, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateVessel(ctx context.Context, in *MsgCreateVessel, opts ...grpc.CallOption) (*MsgCreateVesselResponse, error)
	UpdateVessel(ctx context.Context, in *MsgUpdateVessel, opts ...grpc.CallOption) (*MsgUpdateVesselResponse, error)
	DeleteVessel(ctx context.Context, in *MsgDeleteVessel, opts ...grpc.CallOption) (*MsgDeleteVesselResponse, error)
	ConsolidateReports(ctx context.Context, in *MsgConsolidateReports, opts ...grpc.CallOption) (*MsgConsolidateReportsResponse, error)
	CreateConsolidatedDataReport(ctx context.Context, in *MsgCreateConsolidatedDataReport, opts ...grpc.CallOption) (*MsgCreateConsolidatedDataReportResponse, error)
	UpdateConsolidatedDataReport(ctx context.Context, in *MsgUpdateConsolidatedDataReport, opts ...grpc.CallOption) (*MsgUpdateConsolidatedDataReportResponse, error)
	DeleteConsolidatedDataReport(ctx context.Context, in *MsgDeleteConsolidatedDataReport, opts ...grpc.CallOption) (*MsgDeleteConsolidatedDataReportResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateVessel(ctx context.Context, in *MsgCreateVessel, opts ...grpc.CallOption) (*MsgCreateVesselResponse, error) {
	out := new(MsgCreateVesselResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/CreateVessel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateVessel(ctx context.Context, in *MsgUpdateVessel, opts ...grpc.CallOption) (*MsgUpdateVesselResponse, error) {
	out := new(MsgUpdateVesselResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/UpdateVessel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteVessel(ctx context.Context, in *MsgDeleteVessel, opts ...grpc.CallOption) (*MsgDeleteVesselResponse, error) {
	out := new(MsgDeleteVesselResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/DeleteVessel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ConsolidateReports(ctx context.Context, in *MsgConsolidateReports, opts ...grpc.CallOption) (*MsgConsolidateReportsResponse, error) {
	out := new(MsgConsolidateReportsResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/ConsolidateReports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateConsolidatedDataReport(ctx context.Context, in *MsgCreateConsolidatedDataReport, opts ...grpc.CallOption) (*MsgCreateConsolidatedDataReportResponse, error) {
	out := new(MsgCreateConsolidatedDataReportResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/CreateConsolidatedDataReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateConsolidatedDataReport(ctx context.Context, in *MsgUpdateConsolidatedDataReport, opts ...grpc.CallOption) (*MsgUpdateConsolidatedDataReportResponse, error) {
	out := new(MsgUpdateConsolidatedDataReportResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/UpdateConsolidatedDataReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteConsolidatedDataReport(ctx context.Context, in *MsgDeleteConsolidatedDataReport, opts ...grpc.CallOption) (*MsgDeleteConsolidatedDataReportResponse, error) {
	out := new(MsgDeleteConsolidatedDataReportResponse)
	err := c.cc.Invoke(ctx, "/vesseloracle.vesseloracle.Msg/DeleteConsolidatedDataReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateVessel(context.Context, *MsgCreateVessel) (*MsgCreateVesselResponse, error)
	UpdateVessel(context.Context, *MsgUpdateVessel) (*MsgUpdateVesselResponse, error)
	DeleteVessel(context.Context, *MsgDeleteVessel) (*MsgDeleteVesselResponse, error)
	ConsolidateReports(context.Context, *MsgConsolidateReports) (*MsgConsolidateReportsResponse, error)
	CreateConsolidatedDataReport(context.Context, *MsgCreateConsolidatedDataReport) (*MsgCreateConsolidatedDataReportResponse, error)
	UpdateConsolidatedDataReport(context.Context, *MsgUpdateConsolidatedDataReport) (*MsgUpdateConsolidatedDataReportResponse, error)
	DeleteConsolidatedDataReport(context.Context, *MsgDeleteConsolidatedDataReport) (*MsgDeleteConsolidatedDataReportResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateVessel(ctx context.Context, req *MsgCreateVessel) (*MsgCreateVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVessel not implemented")
}
func (*UnimplementedMsgServer) UpdateVessel(ctx context.Context, req *MsgUpdateVessel) (*MsgUpdateVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVessel not implemented")
}
func (*UnimplementedMsgServer) DeleteVessel(ctx context.Context, req *MsgDeleteVessel) (*MsgDeleteVesselResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVessel not implemented")
}
func (*UnimplementedMsgServer) ConsolidateReports(ctx context.Context, req *MsgConsolidateReports) (*MsgConsolidateReportsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsolidateReports not implemented")
}
func (*UnimplementedMsgServer) CreateConsolidatedDataReport(ctx context.Context, req *MsgCreateConsolidatedDataReport) (*MsgCreateConsolidatedDataReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConsolidatedDataReport not implemented")
}
func (*UnimplementedMsgServer) UpdateConsolidatedDataReport(ctx context.Context, req *MsgUpdateConsolidatedDataReport) (*MsgUpdateConsolidatedDataReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConsolidatedDataReport not implemented")
}
func (*UnimplementedMsgServer) DeleteConsolidatedDataReport(ctx context.Context, req *MsgDeleteConsolidatedDataReport) (*MsgDeleteConsolidatedDataReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConsolidatedDataReport not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateVessel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/CreateVessel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateVessel(ctx, req.(*MsgCreateVessel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateVessel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/UpdateVessel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateVessel(ctx, req.(*MsgUpdateVessel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteVessel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteVessel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteVessel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/DeleteVessel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteVessel(ctx, req.(*MsgDeleteVessel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ConsolidateReports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgConsolidateReports)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ConsolidateReports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/ConsolidateReports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ConsolidateReports(ctx, req.(*MsgConsolidateReports))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateConsolidatedDataReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateConsolidatedDataReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateConsolidatedDataReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/CreateConsolidatedDataReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateConsolidatedDataReport(ctx, req.(*MsgCreateConsolidatedDataReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateConsolidatedDataReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateConsolidatedDataReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateConsolidatedDataReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/UpdateConsolidatedDataReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateConsolidatedDataReport(ctx, req.(*MsgUpdateConsolidatedDataReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteConsolidatedDataReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteConsolidatedDataReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteConsolidatedDataReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vesseloracle.vesseloracle.Msg/DeleteConsolidatedDataReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteConsolidatedDataReport(ctx, req.(*MsgDeleteConsolidatedDataReport))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vesseloracle.vesseloracle.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateVessel",
			Handler:    _Msg_CreateVessel_Handler,
		},
		{
			MethodName: "UpdateVessel",
			Handler:    _Msg_UpdateVessel_Handler,
		},
		{
			MethodName: "DeleteVessel",
			Handler:    _Msg_DeleteVessel_Handler,
		},
		{
			MethodName: "ConsolidateReports",
			Handler:    _Msg_ConsolidateReports_Handler,
		},
		{
			MethodName: "CreateConsolidatedDataReport",
			Handler:    _Msg_CreateConsolidatedDataReport_Handler,
		},
		{
			MethodName: "UpdateConsolidatedDataReport",
			Handler:    _Msg_UpdateConsolidatedDataReport_Handler,
		},
		{
			MethodName: "DeleteConsolidatedDataReport",
			Handler:    _Msg_DeleteConsolidatedDataReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vesseloracle/vesseloracle/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateVessel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVessel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVessel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mmsi) > 0 {
		i -= len(m.Mmsi)
		copy(dAtA[i:], m.Mmsi)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mmsi)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.Depport) > 0 {
		i -= len(m.Depport)
		copy(dAtA[i:], m.Depport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depport)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Destport) > 0 {
		i -= len(m.Destport)
		copy(dAtA[i:], m.Destport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destport)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x62
	}
	if m.Eta != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Eta))
		i--
		dAtA[i] = 0x58
	}
	if m.Adt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Adt))
		i--
		dAtA[i] = 0x50
	}
	if m.Heading != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Heading))
		i--
		dAtA[i] = 0x48
	}
	if m.Course != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Course))
		i--
		dAtA[i] = 0x40
	}
	if m.Speed != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Speed))
		i--
		dAtA[i] = 0x38
	}
	if m.Lon != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lon))
		i--
		dAtA[i] = 0x30
	}
	if m.Lat != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lat))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x22
	}
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateVesselResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateVesselResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateVesselResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateVessel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVessel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVessel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Mmsi) > 0 {
		i -= len(m.Mmsi)
		copy(dAtA[i:], m.Mmsi)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Mmsi)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.Depport) > 0 {
		i -= len(m.Depport)
		copy(dAtA[i:], m.Depport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depport)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Destport) > 0 {
		i -= len(m.Destport)
		copy(dAtA[i:], m.Destport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Destport)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x62
	}
	if m.Eta != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Eta))
		i--
		dAtA[i] = 0x58
	}
	if m.Adt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Adt))
		i--
		dAtA[i] = 0x50
	}
	if m.Heading != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Heading))
		i--
		dAtA[i] = 0x48
	}
	if m.Course != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Course))
		i--
		dAtA[i] = 0x40
	}
	if m.Speed != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Speed))
		i--
		dAtA[i] = 0x38
	}
	if m.Lon != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lon))
		i--
		dAtA[i] = 0x30
	}
	if m.Lat != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lat))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x22
	}
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateVesselResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateVesselResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateVesselResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVessel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVessel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVessel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x22
	}
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteVesselResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteVesselResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteVesselResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgConsolidateReports) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConsolidateReports) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConsolidateReports) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgConsolidateReportsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConsolidateReportsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConsolidateReportsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateConsolidatedDataReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConsolidatedDataReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConsolidatedDataReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depport) > 0 {
		i -= len(m.Depport)
		copy(dAtA[i:], m.Depport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depport)))
		i--
		dAtA[i] = 0x5a
	}
	if m.DepportScore != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DepportScore))
		i--
		dAtA[i] = 0x50
	}
	if m.EtaStdAll != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaStdAll))
		i--
		dAtA[i] = 0x48
	}
	if m.EtaStdCleaned != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaStdCleaned))
		i--
		dAtA[i] = 0x40
	}
	if m.EtaMeanAll != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaMeanAll))
		i--
		dAtA[i] = 0x38
	}
	if m.EtaMeanCleaned != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaMeanCleaned))
		i--
		dAtA[i] = 0x30
	}
	if m.EtaOutliers != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaOutliers))
		i--
		dAtA[i] = 0x28
	}
	if m.TotalSamples != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalSamples))
		i--
		dAtA[i] = 0x20
	}
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateConsolidatedDataReportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConsolidatedDataReportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConsolidatedDataReportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateConsolidatedDataReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateConsolidatedDataReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateConsolidatedDataReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depport) > 0 {
		i -= len(m.Depport)
		copy(dAtA[i:], m.Depport)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depport)))
		i--
		dAtA[i] = 0x5a
	}
	if m.DepportScore != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DepportScore))
		i--
		dAtA[i] = 0x50
	}
	if m.EtaStdAll != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaStdAll))
		i--
		dAtA[i] = 0x48
	}
	if m.EtaStdCleaned != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaStdCleaned))
		i--
		dAtA[i] = 0x40
	}
	if m.EtaMeanAll != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaMeanAll))
		i--
		dAtA[i] = 0x38
	}
	if m.EtaMeanCleaned != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaMeanCleaned))
		i--
		dAtA[i] = 0x30
	}
	if m.EtaOutliers != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EtaOutliers))
		i--
		dAtA[i] = 0x28
	}
	if m.TotalSamples != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalSamples))
		i--
		dAtA[i] = 0x20
	}
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateConsolidatedDataReportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateConsolidatedDataReportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateConsolidatedDataReportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteConsolidatedDataReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteConsolidatedDataReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteConsolidatedDataReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Ts != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Ts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Imo) > 0 {
		i -= len(m.Imo)
		copy(dAtA[i:], m.Imo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Imo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteConsolidatedDataReportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteConsolidatedDataReportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteConsolidatedDataReportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateVessel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Lat != 0 {
		n += 1 + sovTx(uint64(m.Lat))
	}
	if m.Lon != 0 {
		n += 1 + sovTx(uint64(m.Lon))
	}
	if m.Speed != 0 {
		n += 1 + sovTx(uint64(m.Speed))
	}
	if m.Course != 0 {
		n += 1 + sovTx(uint64(m.Course))
	}
	if m.Heading != 0 {
		n += 1 + sovTx(uint64(m.Heading))
	}
	if m.Adt != 0 {
		n += 1 + sovTx(uint64(m.Adt))
	}
	if m.Eta != 0 {
		n += 1 + sovTx(uint64(m.Eta))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Depport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mmsi)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateVesselResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateVessel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Lat != 0 {
		n += 1 + sovTx(uint64(m.Lat))
	}
	if m.Lon != 0 {
		n += 1 + sovTx(uint64(m.Lon))
	}
	if m.Speed != 0 {
		n += 1 + sovTx(uint64(m.Speed))
	}
	if m.Course != 0 {
		n += 1 + sovTx(uint64(m.Course))
	}
	if m.Heading != 0 {
		n += 1 + sovTx(uint64(m.Heading))
	}
	if m.Adt != 0 {
		n += 1 + sovTx(uint64(m.Adt))
	}
	if m.Eta != 0 {
		n += 1 + sovTx(uint64(m.Eta))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Destport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Depport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Mmsi)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateVesselResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteVessel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteVesselResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgConsolidateReports) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgConsolidateReportsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	return n
}

func (m *MsgCreateConsolidatedDataReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	if m.TotalSamples != 0 {
		n += 1 + sovTx(uint64(m.TotalSamples))
	}
	if m.EtaOutliers != 0 {
		n += 1 + sovTx(uint64(m.EtaOutliers))
	}
	if m.EtaMeanCleaned != 0 {
		n += 1 + sovTx(uint64(m.EtaMeanCleaned))
	}
	if m.EtaMeanAll != 0 {
		n += 1 + sovTx(uint64(m.EtaMeanAll))
	}
	if m.EtaStdCleaned != 0 {
		n += 1 + sovTx(uint64(m.EtaStdCleaned))
	}
	if m.EtaStdAll != 0 {
		n += 1 + sovTx(uint64(m.EtaStdAll))
	}
	if m.DepportScore != 0 {
		n += 1 + sovTx(uint64(m.DepportScore))
	}
	l = len(m.Depport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateConsolidatedDataReportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateConsolidatedDataReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	if m.TotalSamples != 0 {
		n += 1 + sovTx(uint64(m.TotalSamples))
	}
	if m.EtaOutliers != 0 {
		n += 1 + sovTx(uint64(m.EtaOutliers))
	}
	if m.EtaMeanCleaned != 0 {
		n += 1 + sovTx(uint64(m.EtaMeanCleaned))
	}
	if m.EtaMeanAll != 0 {
		n += 1 + sovTx(uint64(m.EtaMeanAll))
	}
	if m.EtaStdCleaned != 0 {
		n += 1 + sovTx(uint64(m.EtaStdCleaned))
	}
	if m.EtaStdAll != 0 {
		n += 1 + sovTx(uint64(m.EtaStdAll))
	}
	if m.DepportScore != 0 {
		n += 1 + sovTx(uint64(m.DepportScore))
	}
	l = len(m.Depport)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateConsolidatedDataReportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteConsolidatedDataReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Imo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Ts != 0 {
		n += 1 + sovTx(uint64(m.Ts))
	}
	return n
}

func (m *MsgDeleteConsolidatedDataReportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVessel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVessel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVessel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			m.Lat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lon", wireType)
			}
			m.Lon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lon |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Speed", wireType)
			}
			m.Speed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Speed |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Course", wireType)
			}
			m.Course = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Course |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Heading", wireType)
			}
			m.Heading = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Heading |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adt", wireType)
			}
			m.Adt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Adt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Eta", wireType)
			}
			m.Eta = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Eta |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mmsi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mmsi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateVesselResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateVesselResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateVesselResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateVessel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVessel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVessel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			m.Lat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lon", wireType)
			}
			m.Lon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lon |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Speed", wireType)
			}
			m.Speed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Speed |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Course", wireType)
			}
			m.Course = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Course |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Heading", wireType)
			}
			m.Heading = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Heading |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adt", wireType)
			}
			m.Adt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Adt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Eta", wireType)
			}
			m.Eta = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Eta |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mmsi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mmsi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateVesselResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateVesselResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateVesselResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVessel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVessel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVessel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteVesselResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteVesselResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteVesselResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConsolidateReports) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConsolidateReports: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConsolidateReports: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConsolidateReportsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConsolidateReportsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConsolidateReportsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConsolidatedDataReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConsolidatedDataReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConsolidatedDataReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSamples", wireType)
			}
			m.TotalSamples = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalSamples |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaOutliers", wireType)
			}
			m.EtaOutliers = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaOutliers |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaMeanCleaned", wireType)
			}
			m.EtaMeanCleaned = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaMeanCleaned |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaMeanAll", wireType)
			}
			m.EtaMeanAll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaMeanAll |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaStdCleaned", wireType)
			}
			m.EtaStdCleaned = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaStdCleaned |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaStdAll", wireType)
			}
			m.EtaStdAll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaStdAll |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepportScore", wireType)
			}
			m.DepportScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepportScore |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConsolidatedDataReportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConsolidatedDataReportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConsolidatedDataReportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateConsolidatedDataReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateConsolidatedDataReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateConsolidatedDataReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSamples", wireType)
			}
			m.TotalSamples = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalSamples |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaOutliers", wireType)
			}
			m.EtaOutliers = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaOutliers |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaMeanCleaned", wireType)
			}
			m.EtaMeanCleaned = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaMeanCleaned |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaMeanAll", wireType)
			}
			m.EtaMeanAll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaMeanAll |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaStdCleaned", wireType)
			}
			m.EtaStdCleaned = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaStdCleaned |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtaStdAll", wireType)
			}
			m.EtaStdAll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EtaStdAll |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepportScore", wireType)
			}
			m.DepportScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepportScore |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depport", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depport = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateConsolidatedDataReportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateConsolidatedDataReportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateConsolidatedDataReportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteConsolidatedDataReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteConsolidatedDataReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteConsolidatedDataReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteConsolidatedDataReportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteConsolidatedDataReportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteConsolidatedDataReportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
